var documenterSearchIndex = {"docs":
[{"location":"#ClimaCache.jl","page":"Home","title":"ClimaCache.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Cache system for CliMA Land model.","category":"page"},{"location":"#Install","page":"Home","title":"Install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg;\nPkg.add(\"ClimaCache\");","category":"page"},{"location":"API/#ClimaCache","page":"API","title":"ClimaCache","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = ClimaCache","category":"page"},{"location":"API/#Environmental-Conditions","page":"API","title":"Environmental Conditions","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AirLayer\nMeteorology\nAbstractSoilVC\nBrooksCorey\nVanGenuchten\nVanGenuchten{FT}(name::String) where {FT<:AbstractFloat}\nAbstractSoilAlbedo\nBroadbandSoilAlbedo\nHyperspectralSoilAlbedo\nSoilLayer\nSoil","category":"page"},{"location":"API/#ClimaCache.AirLayer","page":"API","title":"ClimaCache.AirLayer","text":"mutable struct AirLayer{FT<:AbstractFloat}\n\nStructure that stores air layer information\n\nFields\n\nZ::AbstractFloat\nMean height of the layer [m]\nΔZ::AbstractFloat\nLayer thickness [m]\nP_AIR::AbstractFloat\nAtmospheric pressure [Pa]\np_CO₂::AbstractFloat\nCO₂ partial pressure [Pa]\np_H₂O::AbstractFloat\nH₂O partial pressure [Pa]\nt::AbstractFloat\nTemperature [K]\nwind::AbstractFloat\nWind speed [m s⁻¹]\ne::AbstractFloat\nTotal energy within the air layer [J m⁻²]\nn_CO₂::AbstractFloat\nMole of CO₂ per surface area [mol m⁻²]\nn_H₂O::AbstractFloat\nMole of H₂O per surface area [mol m⁻²]\n∂e∂t::AbstractFloat\nMarginal increase in total energy [J m⁻² s⁻¹]\n∂CO₂∂t::AbstractFloat\nMarginal increase in total moles of CO₂ [mol m⁻² s⁻¹]\n∂H₂O∂t::AbstractFloat\nMarginal increase in total moles of H₂O [mol m⁻² s⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Meteorology","page":"API","title":"ClimaCache.Meteorology","text":"mutable struct Meteorology{FT<:AbstractFloat}\n\nStructure that stores meteorological information\n\nFields\n\nrain::AbstractFloat\nPrecipitation in form of rain (before interception) [mol m⁻²]\nsnow::AbstractFloat\nPrecipitation in form of snow (before interception) [mol m⁻²]\nt_air::AbstractFloat\nAir temperature as the boundary condition for canopy airspace [K]\nt_precip::AbstractFloat\nPrecipitation temperature [K]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractSoilVC","page":"API","title":"ClimaCache.AbstractSoilVC","text":"abstract type AbstractSoilVC{FT<:AbstractFloat}\n\nHierarchy of AbstractSoilVC:\n\nBrooksCorey\nVanGenuchten\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BrooksCorey","page":"API","title":"ClimaCache.BrooksCorey","text":"struct BrooksCorey{FT<:AbstractFloat} <: ClimaCache.AbstractSoilVC{FT<:AbstractFloat}\n\nBrooks Corey soil parameters\n\nFields\n\nB::AbstractFloat\nSoil b\nTYPE::String\nSoil type\nΨ_SAT::AbstractFloat\nPotential at saturation [MPa]\nΘ_SAT::AbstractFloat\nSaturated soil volumetric water content\nΘ_RES::AbstractFloat\nResidual soil volumetric water content\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.VanGenuchten","page":"API","title":"ClimaCache.VanGenuchten","text":"struct VanGenuchten{FT<:AbstractFloat} <: ClimaCache.AbstractSoilVC{FT<:AbstractFloat}\n\nvan Genuchten soil parameters\n\nFields\n\nN::AbstractFloat\nSoil n is Measure of the pore-size distribution\nTYPE::String\nSoil type\nα::AbstractFloat\nSoil α is related to the inverse of the air entry suction, α > 0\nΘ_RES::AbstractFloat\nResidual soil volumetric water content\nΘ_SAT::AbstractFloat\nSaturated soil volumetric water content\nM::AbstractFloat\nSoil m = 1 - 1/n\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.VanGenuchten-Union{Tuple{String}, Tuple{FT}} where FT<:AbstractFloat","page":"API","title":"ClimaCache.VanGenuchten","text":"VanGenuchten{FT}(name::String) where {FT<:AbstractFloat}\n\nConstructor for VanGenuchten, given\n\nname Soil type name, need to be Sand, Loamy Sand, Sandy Loam, Loam, Sandy Clay Loam, Silt Loam, Silt (default), Clay Loam, Silty Clay Loam, Sandy Clay, Silty Clay, and Clay.\n\n\n\n\n\n","category":"method"},{"location":"API/#ClimaCache.AbstractSoilAlbedo","page":"API","title":"ClimaCache.AbstractSoilAlbedo","text":"abstract type AbstractSoilAlbedo{FT<:AbstractFloat}\n\nHierarchy of AbstractSoilAlbedo:\n\nBroadbandSoilAlbedo\nHyperspectralSoilAlbedo\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BroadbandSoilAlbedo","page":"API","title":"ClimaCache.BroadbandSoilAlbedo","text":"mutable struct BroadbandSoilAlbedo{FT<:AbstractFloat} <: ClimaCache.AbstractSoilAlbedo{FT<:AbstractFloat}\n\nStructure for broadband soil albedo\n\nFields\n\nρ_LW::AbstractFloat\nReflectance for longwave radiation\ne_net_diffuse::AbstractFloat\nNet diffuse radiation at top soil [W m⁻²]\ne_net_direct::AbstractFloat\nNet direct radiation at top soil [W m⁻²]\nr_net_lw::AbstractFloat\nNet longwave energy absorption [W m⁻²]\nr_net_sw::AbstractFloat\nNet shortwave energy absorption [W m⁻²]\nρ_sw::Vector{FT} where FT<:AbstractFloat\nReflectance for shortwave radiation (for PAR and NIR)\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.HyperspectralSoilAlbedo","page":"API","title":"ClimaCache.HyperspectralSoilAlbedo","text":"mutable struct HyperspectralSoilAlbedo{FT<:AbstractFloat} <: ClimaCache.AbstractSoilAlbedo{FT<:AbstractFloat}\n\nStructure for hyperspectral soil albedo\n\nFields\n\nDATASET::String\nFile path to the Netcdf dataset\nDIM_NIR::Int64\nNumber of wavelength bins for NIR\nDIM_WL::Int64\nNumber of wavelength bins\nMAT_ρ::Matrix{FT} where FT<:AbstractFloat\nA matrix of characteristic curves\nρ_LW::AbstractFloat\nReflectance for longwave radiation\ne_net_diffuse::Vector{FT} where FT<:AbstractFloat\nNet diffuse radiation at top soil [mW m⁻² nm⁻¹]\ne_net_direct::Vector{FT} where FT<:AbstractFloat\nNet direct radiation at top soil [mW m⁻² nm⁻¹]\nr_net_lw::AbstractFloat\nNet longwave energy absorption [W m⁻²]\nr_net_sw::AbstractFloat\nNet shortwave energy absorption [W m⁻²]\nρ_sw::Vector{FT} where FT<:AbstractFloat\nReflectance for shortwave radiation\n_tmp_vec_nir::Vector{FT} where FT<:AbstractFloat\nCache variable with length of NIR\n_weight::Vector{FT} where FT<:AbstractFloat\nWeights of the four characteristic curves\n_ρ_sw::Vector{FT} where FT<:AbstractFloat\nCache variable to store ρPAR and ρNIR (a segmented curve)\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.SoilLayer","page":"API","title":"ClimaCache.SoilLayer","text":"mutable struct SoilLayer{FT<:AbstractFloat}\n\nStructure for soil layer\n\nFields\n\nCP::AbstractFloat\nSpecific heat capacity of soil [J K⁻¹ kg⁻¹]\nK_MAX::AbstractFloat\nMaximum soil hydraulic conductivity at 25 °C [mol m⁻¹ s⁻¹ MPa⁻¹]\nΛ_THERMAL::AbstractFloat\nSoil thermal conductivity [W m⁻¹ K⁻¹]\nρ::AbstractFloat\nDry soil density [kg m⁻³]\nVC::Union{ClimaCache.BrooksCorey{FT}, ClimaCache.VanGenuchten{FT}} where FT<:AbstractFloat\nSoil moisture retention curve\nZS::Vector{FT} where FT<:AbstractFloat\nDepth boundaries [m]\nZ::AbstractFloat\nMean depth [m]\nΔZ::AbstractFloat\nLayer thickness [m]\nt::AbstractFloat\nTemperature [K]\ne::AbstractFloat\nTotal stored energy per volume [J m⁻³]\nθ::AbstractFloat\nSoil water content\n∂e∂t::AbstractFloat\nMarginal increase in energy [W m⁻²]\n∂θ∂t::AbstractFloat\nMarginal increase in soil water content [s⁻¹]\nk::AbstractFloat\nSoil hydraulic conductance per area [mol m⁻² s⁻¹ MPa⁻¹]\nψ::AbstractFloat\nMatric potential [MPa]\n_cp::AbstractFloat\nCombined specific heat capacity of soil [J K⁻¹ kg⁻¹]\n_λ_thermal::AbstractFloat\nCombined soil thermal conductance [W m⁻² K⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Soil","page":"API","title":"ClimaCache.Soil","text":"mutable struct Soil{FT<:AbstractFloat}\n\nStructure for Soil\n\nFields\n\nDIM_SOIL::Int64\nDimension of soil layers\nAREA::AbstractFloat\nTotal area of the soil [m²]\nCOLOR::Int64\nColor class as in CLM\nZS::Vector{FT} where FT<:AbstractFloat\nSoil layers boundaries\nALBEDO::Union{ClimaCache.BroadbandSoilAlbedo{FT}, ClimaCache.HyperspectralSoilAlbedo{FT}} where FT<:AbstractFloat\nAlbedo related structure\nLAYERS::Array{ClimaCache.SoilLayer{FT}, 1} where FT<:AbstractFloat\nSoil layers\nrunoff::AbstractFloat\nSurface runoff due to heavy precipitation during the time step [mol m⁻²]\n_k::Vector{FT} where FT<:AbstractFloat\nSoil hydraulic conductance between layers per area [mol m⁻² s⁻¹ MPa⁻¹]\n_q::Vector{FT} where FT<:AbstractFloat\nFlux between layers per area [mol m⁻² s⁻¹]\n_q_thermal::Vector{FT} where FT<:AbstractFloat\nThermal flux between layers per area [mol m⁻² s⁻¹]\n_δt::Vector{FT} where FT<:AbstractFloat\nSoil temperature difference between layers [MPa]\n_δψ::Vector{FT} where FT<:AbstractFloat\nSoil metric potential difference between layers [MPa]\n_λ_thermal::Vector{FT} where FT<:AbstractFloat\nSoil thermal conductance between layers per area [W m⁻² K⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#Plant","page":"API","title":"Plant","text":"","category":"section"},{"location":"API/#Hydraulics","page":"API","title":"Hydraulics","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AbstractPVCurve\nLinearPVCurve\nSegmentedPVCurve\nAbstractHydraulicSystem\nAbstractXylemVC\nLogisticVC\nPowerVC\nWeibullVC\nComplexVC\nAbstractFlowProfile\nNonSteadyStateFlow\nSteadyStateFlow\nLeafHydraulics\nRootHydraulics\nStemHydraulics","category":"page"},{"location":"API/#ClimaCache.AbstractPVCurve","page":"API","title":"ClimaCache.AbstractPVCurve","text":"abstract type AbstractPVCurve{FT<:AbstractFloat}\n\nHierarchy of AbstractPVCurve:\n\nLinearPVCurve\nSegmentedPVCurve\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.LinearPVCurve","page":"API","title":"ClimaCache.LinearPVCurve","text":"mutable struct LinearPVCurve{FT<:AbstractFloat} <: ClimaCache.AbstractPVCurve{FT<:AbstractFloat}\n\nStruct that contains information for linear PV curve\n\nFields\n\nK_REFILL::AbstractFloat\nConductance for refilling (relative to maximum) [MPa⁻¹ s⁻¹]\nSLOPE::AbstractFloat\nSlope of the linear PV curve (relative to maximum) [MPa⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.SegmentedPVCurve","page":"API","title":"ClimaCache.SegmentedPVCurve","text":"mutable struct SegmentedPVCurve{FT<:AbstractFloat} <: ClimaCache.AbstractPVCurve{FT<:AbstractFloat}\n\nStruct that contains information for segmented PV curve\n\nFields\n\nC_ALL::AbstractFloat\nn_o / maximum V [mol m⁻³]\nK_REFILL::AbstractFloat\nConductance for refilling (relative to maximum) [MPa⁻¹ s⁻¹]\nRWC_APO::AbstractFloat\nApoplastic water content relative to maximum water volume\nRWC_TLP::AbstractFloat\nRelative water content at turgor loss point\nϵ_BULK::AbstractFloat\nBulk modulus of elasticity [MPa]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractHydraulicSystem","page":"API","title":"ClimaCache.AbstractHydraulicSystem","text":"abstract type AbstractHydraulicSystem{FT<:AbstractFloat}\n\nHierarchy of AbstractHydraulicSystem:\n\nLeafHydraulics\nRootHydraulics\nStemHydraulics\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractXylemVC","page":"API","title":"ClimaCache.AbstractXylemVC","text":"abstract type AbstractXylemVC{FT<:AbstractFloat}\n\nHierarchy of AbstractXylemVC:\n\nLogisticVC\nPowerVC\nWeibullVC\nComplexVC\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.LogisticVC","page":"API","title":"ClimaCache.LogisticVC","text":"mutable struct LogisticVC{FT<:AbstractFloat} <: ClimaCache.AbstractXylemVC{FT<:AbstractFloat}\n\nModified logistic function for vulnerability curve\n\nFields\n\nA::AbstractFloat\nMultiplier to exponential component\nB::AbstractFloat\nMultiplier to pressure [MPa⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.PowerVC","page":"API","title":"ClimaCache.PowerVC","text":"mutable struct PowerVC{FT<:AbstractFloat} <: ClimaCache.AbstractXylemVC{FT<:AbstractFloat}\n\nPower function for vulnerability curve\n\nFields\n\nA::AbstractFloat\nMultiplier to power component [MPa⁻ᵇ]\nB::AbstractFloat\nPower to pressure\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.WeibullVC","page":"API","title":"ClimaCache.WeibullVC","text":"mutable struct WeibullVC{FT<:AbstractFloat} <: ClimaCache.AbstractXylemVC{FT<:AbstractFloat}\n\nWeibull cumulative distribution function for vulnerability curve\n\nFields\n\nB::AbstractFloat\nNumerator in the exponential component [MPa]\nC::AbstractFloat\nPower to pressure component\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.ComplexVC","page":"API","title":"ClimaCache.ComplexVC","text":"mutable struct ComplexVC{FT<:AbstractFloat} <: ClimaCache.AbstractXylemVC{FT<:AbstractFloat}\n\nA complex struct for segmented vulnerability curve such as dual Weibull function\n\nFields\n\nPS::Vector{FT} where FT<:AbstractFloat\nPercentages of each VC component\nVCS::Union{Array{ClimaCache.AbstractXylemVC{FT}, 1}, Array{ClimaCache.LogisticVC{FT}, 1}, Array{ClimaCache.PowerVC{FT}, 1}, Array{ClimaCache.WeibullVC{FT}, 1}} where FT<:AbstractFloat\nVector of vulnerability curve components\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractFlowProfile","page":"API","title":"ClimaCache.AbstractFlowProfile","text":"abstract type AbstractFlowProfile{FT<:AbstractFloat}\n\nHierarchy of AbstractFlowProfile:\n\nNonSteadyStateFlow\nSteadyStateFlow\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.NonSteadyStateFlow","page":"API","title":"ClimaCache.NonSteadyStateFlow","text":"mutable struct NonSteadyStateFlow{FT<:AbstractFloat} <: ClimaCache.AbstractFlowProfile{FT<:AbstractFloat}\n\nStruct that contains stem hydraulic system flow rates at non-steady state\n\nFields\n\nDIM_CAPACITY::Int64\nDimension of capaciatance elements\nf_in::AbstractFloat\nFlow rate into the organ [mol s⁻¹] (for root and stem) or [mol m⁻² s⁻¹] (for leaf)\nf_out::AbstractFloat\nFlow rate out of the organ [mol s⁻¹] (for root and stem) or [mol m⁻² s⁻¹] (for leaf)\n_f_element::Vector{FT} where FT<:AbstractFloat\nVector of xylem water flow [mol s⁻¹] (for root and stem) or [mol m⁻² s⁻¹] (for leaf)\n_f_buffer::Vector{FT} where FT<:AbstractFloat\nVector of buffer water flow [mol s⁻¹] (for root and stem) or [mol m⁻² s⁻¹] (for leaf)\n_f_sum::Vector{FT} where FT<:AbstractFloat\nVector of sum buffer water flow [mol s⁻¹] (for root and stem) or [mol m⁻² s⁻¹] (for leaf)\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.SteadyStateFlow","page":"API","title":"ClimaCache.SteadyStateFlow","text":"mutable struct SteadyStateFlow{FT<:AbstractFloat} <: ClimaCache.AbstractFlowProfile{FT<:AbstractFloat}\n\nStruct that contains stem hydraulic system flow rates at steady state\n\nFields\n\nflow::AbstractFloat\nFlow rate through the organ [mol s⁻¹] (for root and stem) or [mol m⁻² s⁻¹] (for leaf)\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.LeafHydraulics","page":"API","title":"ClimaCache.LeafHydraulics","text":"mutable struct LeafHydraulics{FT<:AbstractFloat} <: ClimaCache.AbstractHydraulicSystem{FT<:AbstractFloat}\n\nStruct that contains leaf hydraulic system\n\nFields\n\nDIM_XYLEM::Int64\nDimension of xylem slices\nAREA::AbstractFloat\nLeaf area [m²]\nK_OX::AbstractFloat\nMaximal extra-xylary hydraulic conductance [mol s⁻¹ MPa⁻¹ m⁻²]\nK_SLA::AbstractFloat\nMaximal leaf xylem hydraulic conductance per leaf area [mol s⁻¹ MPa⁻¹ m⁻²]\nV_MAXIMUM::AbstractFloat\nTotal capaciatance at Ψ = 0 [mol m⁻²]\nFLOW::Union{ClimaCache.NonSteadyStateFlow{FT}, ClimaCache.SteadyStateFlow{FT}} where FT<:AbstractFloat\nFlow profile\nPVC::Union{ClimaCache.LinearPVCurve{FT}, ClimaCache.SegmentedPVCurve{FT}} where FT<:AbstractFloat\nPressure volume curve for storage\nVC::Union{ClimaCache.ComplexVC{FT}, ClimaCache.LogisticVC{FT}, ClimaCache.PowerVC{FT}, ClimaCache.WeibullVC{FT}} where FT<:AbstractFloat\nVulnerability curve\np_history::Vector{FT} where FT<:AbstractFloat\nVector of xylem water pressure history (normalized to 298.15 K) [MPa]\nv_storage::AbstractFloat\nCurrent capaciatance at Ψ_leaf [mol m⁻²]\np_leaf::AbstractFloat\nLeaf end water pressure at air-water interface [MPa]\np_ups::AbstractFloat\nLeaf xylem water pressure at the leaf base (upstream) [MPa]\n_e_crit::AbstractFloat\nCritical flow rate [mol s⁻¹ m⁻²]\n_k_history::Vector{FT} where FT<:AbstractFloat\nVector of leaf kr history per element [-]\n_p_dos::AbstractFloat\nLeaf xylem water pressure at the downstream end of leaf xylem [MPa]\n_p_element::Vector{FT} where FT<:AbstractFloat\nVector of xylem water pressure [MPa]\n_p_storage::AbstractFloat\nPressure of storage\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.RootHydraulics","page":"API","title":"ClimaCache.RootHydraulics","text":"mutable struct RootHydraulics{FT<:AbstractFloat} <: ClimaCache.AbstractHydraulicSystem{FT<:AbstractFloat}\n\nStruct that contains root hydraulic system\n\nFields\n\nDIM_XYLEM::Int64\nDimension of xylem slices\nAREA::AbstractFloat\nRoot cross-section area [m²]\nK_RHIZ::AbstractFloat\nRhizosphere  conductance [mol s⁻¹ MPa⁻¹]\nK_X::AbstractFloat\nMaximal xylem hydraulic conductivity [mol s⁻¹ MPa⁻¹ m⁻²]\nL::AbstractFloat\nLength [m]\nV_MAXIMUM::Vector{FT} where FT<:AbstractFloat\nMaximal storage per element [mol]\nΔH::AbstractFloat\nRoot z difference [m]\nFLOW::Union{ClimaCache.NonSteadyStateFlow{FT}, ClimaCache.SteadyStateFlow{FT}} where FT<:AbstractFloat\nFlow profile\nPVC::Union{ClimaCache.LinearPVCurve{FT}, ClimaCache.SegmentedPVCurve{FT}} where FT<:AbstractFloat\nPressure volume curve for storage\nSH::Union{ClimaCache.BrooksCorey{FT}, ClimaCache.VanGenuchten{FT}} where FT<:AbstractFloat\nSoil hydraulics\nVC::Union{ClimaCache.ComplexVC{FT}, ClimaCache.LogisticVC{FT}, ClimaCache.PowerVC{FT}, ClimaCache.WeibullVC{FT}} where FT<:AbstractFloat\nVulnerability curve\np_history::Vector{FT} where FT<:AbstractFloat\nVector of xylem water pressure history (normalized to 298.15 K) [MPa]\nv_storage::Vector{FT} where FT<:AbstractFloat\nStorage per element [mol]\np_dos::AbstractFloat\nXylem water pressure at the downstream end of xylem [MPa]\np_ups::AbstractFloat\nSoil matrix potential [MPa]\nψ_osm::AbstractFloat\nSoil osmotic potential at 298.15 K `[MPa]\n_k_history::Vector{FT} where FT<:AbstractFloat\nVector of leaf kr history per element\n_p_element::Vector{FT} where FT<:AbstractFloat\nVector of xylem water pressure [MPa]\n_p_rhiz::AbstractFloat\nXylem-rhizosphere interface water pressure [MPa]\n_p_storage::Vector{FT} where FT<:AbstractFloat\nPressure of storage per element [MPa]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.StemHydraulics","page":"API","title":"ClimaCache.StemHydraulics","text":"mutable struct StemHydraulics{FT<:AbstractFloat} <: ClimaCache.AbstractHydraulicSystem{FT<:AbstractFloat}\n\nStruct that contains stem hydraulic system\n\nFields\n\nDIM_XYLEM::Int64\nDimension of xylem slices\nAREA::AbstractFloat\nRoot cross-section area [m²]\nK_X::AbstractFloat\nMaximal xylem hydraulic conductivity (per root depth) [mol s⁻¹ MPa⁻¹ m⁻²]\nL::AbstractFloat\nLength [m]\nV_MAXIMUM::Vector{FT} where FT<:AbstractFloat\nMaximal storage per element [mol]\nΔH::AbstractFloat\nRoot z difference [m]\nFLOW::Union{ClimaCache.NonSteadyStateFlow{FT}, ClimaCache.SteadyStateFlow{FT}} where FT<:AbstractFloat\nFlow profile\nPVC::Union{ClimaCache.LinearPVCurve{FT}, ClimaCache.SegmentedPVCurve{FT}} where FT<:AbstractFloat\nPressure volume curve for storage\nVC::Union{ClimaCache.ComplexVC{FT}, ClimaCache.LogisticVC{FT}, ClimaCache.PowerVC{FT}, ClimaCache.WeibullVC{FT}} where FT<:AbstractFloat\nVulnerability curve\np_history::Vector{FT} where FT<:AbstractFloat\nVector of xylem water pressure history (normalized to 298.15 K) [MPa]\nv_storage::Vector{FT} where FT<:AbstractFloat\nStorage per element [mol]\np_dos::AbstractFloat\nXylem water pressure at the downstream end of xylem [MPa]\np_ups::AbstractFloat\nSoil matrix potential [MPa]\n_k_history::Vector{FT} where FT<:AbstractFloat\nVector of leaf kr history per element\n_p_element::Vector{FT} where FT<:AbstractFloat\nVector of xylem water pressure [MPa]\n_p_storage::Vector{FT} where FT<:AbstractFloat\nPressure of storage per element\n\n\n\n\n\n","category":"type"},{"location":"API/#Leaf-Level","page":"API","title":"Leaf Level","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AbstractLeafBiophysics\nBroadbandLeafBiophysics\nHyperspectralLeafBiophysics\nVanDerTolFluorescenceModel\nVDTModelAll\nVDTModelDrought\nAbstractReactionCenter\nCytochromeReactionCenter\nVJPReactionCenter\nAbstractPhotosynthesisModel\nC3CytochromeModel\nC3VJPModel\nC4VJPModel\nAbstractPhotosynthesisMode\nGCO₂Mode\nPCO₂Mode\nAbstractTemperatureDependency\nArrhenius\nArrheniusPeak\nQ10\nAbstractLeaf\nLeaf\nLeaves1D\nLeaves2D","category":"page"},{"location":"API/#ClimaCache.AbstractLeafBiophysics","page":"API","title":"ClimaCache.AbstractLeafBiophysics","text":"abstract type AbstractLeafBiophysics{FT<:AbstractFloat}\n\nHierarchy of AbstractLeafBiophysics:\n\nBroadbandLeafBiophysics\nHyperspectralLeafBiophysics\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BroadbandLeafBiophysics","page":"API","title":"ClimaCache.BroadbandLeafBiophysics","text":"mutable struct BroadbandLeafBiophysics{FT<:AbstractFloat} <: ClimaCache.AbstractLeafBiophysics{FT<:AbstractFloat}\n\nStruct that contains leaf biophysical traits used to run leaf reflectance and transmittance.\n\nFields\n\nα_NIR::AbstractFloat\nBroadband absorption fraction at the NIR region\nα_PAR::AbstractFloat\nBroadband absorption fraction at the PAR region\nϵ_LW::AbstractFloat\nEmissivity for longwave radiation\nlma::AbstractFloat\nDry matter content (dry leaf mass per unit area) [g cm⁻²]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.HyperspectralLeafBiophysics","page":"API","title":"ClimaCache.HyperspectralLeafBiophysics","text":"mutable struct HyperspectralLeafBiophysics{FT<:AbstractFloat} <: ClimaCache.AbstractLeafBiophysics{FT<:AbstractFloat}\n\nStruct that contains leaf biophysical traits used to run leaf reflectance and transmittance.\n\nFields\n\nDIM_SIF::Int64\nDimension of SIF wave length bins\nDIM_SIFE::Int64\nDimension of SIF excitation wave length bins\nDIM_WL::Int64\nDimension of short wave length bins\nMESOPHYLL_N::AbstractFloat\nLeaf mesophyll structural parameter that describes mesophyll reflectance and transmittance\nNDUB::Int64\nDoubling adding layers\nρ_LW::AbstractFloat\nBroadband thermal reflectance, related to blackbody emittance [-]\nτ_LW::AbstractFloat\nBroadband thermal transmission, related to blackbody emittance [-]\nant::AbstractFloat\nAnthocyanin content [μg cm⁻²]\nbrown::AbstractFloat\nSenescent material (brown pigments) fraction [-]\ncab::AbstractFloat\nChlorophyll a and b content [μg cm⁻²]\ncar::AbstractFloat\nCarotenoid content [μg cm⁻²]\ncbc::AbstractFloat\nCarbon-based constituents in lma [g cm⁻²]\nf_zeax::AbstractFloat\nZeaxanthin fraction in Carotenoid (1=all Zeaxanthin, 0=all Violaxanthin) [-]\nlma::AbstractFloat\nDry matter content (dry leaf mass per unit area) [g cm⁻²]\npro::AbstractFloat\nProtein content in lma (pro = lma - cbc) [g cm⁻²]\nk_all::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of all materials\nmat_b::Matrix{FT} where FT<:AbstractFloat\nFluorescence excitation matrix backwards [-]\nmat_f::Matrix{FT} where FT<:AbstractFloat\nFluorescence excitation matrix forwards [-]\nα_cab::Vector{FT} where FT<:AbstractFloat\nRelative absorption by Chlorophyll [-]\nα_cabcar::Vector{FT} where FT<:AbstractFloat\nRelative absorption by Chlorophyll+Carotenoid [-]\nα_sw::Vector{FT} where FT<:AbstractFloat\nShortwave absorption, 1 .- ρsw .- τsw  [-]\nρ_sw::Vector{FT} where FT<:AbstractFloat\nShortwave leaf reflectance [-]\nτ_sw::Vector{FT} where FT<:AbstractFloat\nShortwave leaf transmission [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.VanDerTolFluorescenceModel","page":"API","title":"ClimaCache.VanDerTolFluorescenceModel","text":"struct VanDerTolFluorescenceModel{FT<:AbstractFloat}\n\nStructure that stores van der Tol et al. (2014) fluorescence model parameters.\n\nFields\n\nK_0::AbstractFloat\nFitting parameter K_0\nK_A::AbstractFloat\nFitting parameter α\nK_B::AbstractFloat\nFitting parameter β\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.VDTModelAll","page":"API","title":"ClimaCache.VDTModelAll","text":"VanDerTolFluorescenceModel that uses data from all observations \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.VDTModelDrought","page":"API","title":"ClimaCache.VDTModelDrought","text":"VanDerTolFluorescenceModel that uses data from drought stressed observations \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.AbstractReactionCenter","page":"API","title":"ClimaCache.AbstractReactionCenter","text":"abstract type AbstractReactionCenter{FT<:AbstractFloat}\n\nAbstract type for reaction center\n\nHierarchy of the AbstractReactionCenter\n\nVJPReactionCenter\nCytochromeReactionCenter\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.CytochromeReactionCenter","page":"API","title":"ClimaCache.CytochromeReactionCenter","text":"mutable struct CytochromeReactionCenter{FT<:AbstractFloat} <: ClimaCache.AbstractReactionCenter{FT<:AbstractFloat}\n\nStructure that stores reaction center information\n\nFields\n\nF_PSI::AbstractFloat\nFraction of absorbed light used by PSI ETR\nK_D::AbstractFloat\nRate constant of consititutive heat loss from the antennae [ns⁻¹]\nK_F::AbstractFloat\nRate constant of fluorescence [ns⁻¹]\nK_PSI::AbstractFloat\nRate constant of photochemistry for PS I [ns⁻¹]\nK_PSII::AbstractFloat\nRate constant of photochemistry for PS II [ns⁻¹]\nK_U::AbstractFloat\nRate constant of excitation sharing for PS II [ns⁻¹]\nK_X::AbstractFloat\nRate constant of regulated heat loss via oxidized PS I center [s⁻¹]\nΦ_PSI_MAX::AbstractFloat\nMaximal PS I photochemical yield\nϵ_1::AbstractFloat\nWeight factor that PSI fluorescence reaches sensor (after reabsorption)\nϵ_2::AbstractFloat\nWeight factor that PSII fluorescence reaches sensor (after reabsorption)\nϕ_f::AbstractFloat\nFluorescence yield\nϕ_p::AbstractFloat\nPhotochemical yield\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.VJPReactionCenter","page":"API","title":"ClimaCache.VJPReactionCenter","text":"mutable struct VJPReactionCenter{FT<:AbstractFloat} <: ClimaCache.AbstractReactionCenter{FT<:AbstractFloat}\n\nStructure that stores reaction center information\n\nFields\n\nF_PSII::AbstractFloat\nFraction of absorbed light used by PSII ETR\nK_D::AbstractFloat\nRate constant for thermal dissipation\nK_F::AbstractFloat\nRate constant for fluorescence\nK_P_MAX::AbstractFloat\nMaximal rate constant for photochemistry\nΦ_PSII_MAX::AbstractFloat\nmax PSII yield (knpqr=0, all RC open)\nFLM::ClimaCache.VanDerTolFluorescenceModel\nFluorescence model\nk_npq_sus::AbstractFloat\nSustained NPQ rate constant (for seasonal changes, default is zero)\nϕ_f::AbstractFloat\nFluorescence yield\nϕ_p::AbstractFloat\nPhotochemical yield\n_f_m::AbstractFloat\nDark adapted yield (Kp=0)\n_f_m′::AbstractFloat\nLight adapted yield (Kp=0)\n_f_o::AbstractFloat\nDark-adapted fluorescence yield (Kp=max)\n_f_o′::AbstractFloat\nLight-adapted fluorescence yield in the dark (Kp=max)\n_k_npq_rev::AbstractFloat\nReversible NPQ rate constant (initially zero)\n_k_p::AbstractFloat\nRate constant for photochemistry\n_npq::AbstractFloat\nNon-Photochemical quenching\n_q_e::AbstractFloat\nEnergy quenching\n_q_p::AbstractFloat\nPhotochemical quenching\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractPhotosynthesisModel","page":"API","title":"ClimaCache.AbstractPhotosynthesisModel","text":"abstract type AbstractPhotosynthesisModel{FT<:AbstractFloat}\n\nHierarchy of AbstractPhotosynthesisModel:\n\nC3CytochromeModel\nC3VJPModel\nC4VJPModel\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.C3CytochromeModel","page":"API","title":"ClimaCache.C3CytochromeModel","text":"mutable struct C3CytochromeModel{FT<:AbstractFloat} <: ClimaCache.AbstractPhotosynthesisModel{FT<:AbstractFloat}\n\nStructure that stores C3 Cytochrome photosynthesis system information\n\nFields\n\nEFF_1::AbstractFloat\nCoefficient 4.0/4.5 for NADPH/ATP requirement stochiometry, respectively\nEFF_2::AbstractFloat\nCoefficient 8.0/10.5 for NADPH/ATP requirement stochiometry, respectively\nCOLIMIT_CJ::Union{ClimaCache.MinimumColimit{FT}, ClimaCache.QuadraticColimit{FT}, ClimaCache.SerialColimit{FT}} where FT<:AbstractFloat\nAbstractColimit type colimitation method for Ac and Aj => Ai\nCOLIMIT_IP::Union{ClimaCache.MinimumColimit{FT}, ClimaCache.QuadraticColimit{FT}, ClimaCache.SerialColimit{FT}} where FT<:AbstractFloat\nAbstractColimit type colimitation method for Ai and Ap => Ag\nCOLIMIT_J::Union{ClimaCache.MinimumColimit{FT}, ClimaCache.QuadraticColimit{FT}, ClimaCache.SerialColimit{FT}} where FT<:AbstractFloat\nAbstractColimit type colimitation method for J\nTD_KC::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Kc temperature dependency\nTD_KO::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Ko temperature dependency\nTD_KQ::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Kq temperature dependency\nTD_R::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type respiration temperature dependency\nTD_VCMAX::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Vcmax temperature dependency\nTD_Γ::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Γ* temperature dependency\nTD_ηC::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type η_C temperature dependency\nTD_ηL::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type η_L temperature dependency\nb₆f::AbstractFloat\nTotal concentration of Cytochrome b₆f [μmol m⁻²]\nr_d25::AbstractFloat\nRespiration rate at 298.15 K [μmol m⁻² s⁻¹]\nv_cmax25::AbstractFloat\nMaximal carboxylation rate at 298.15 K [μmol m⁻² s⁻¹]\na_gross::AbstractFloat\nGross photosynthetic rate [μmol m⁻² s⁻¹]\na_net::AbstractFloat\nNet photosynthetic rate [μmol m⁻² s⁻¹]\n_a_c::AbstractFloat\nRubisCO limited photosynthetic rate [μmol m⁻² s⁻¹]\n_a_j::AbstractFloat\nLight limited photosynthetic rate [μmol m⁻² s⁻¹]\n_a_p::AbstractFloat\nProduct limited photosynthetic rate [μmol m⁻² s⁻¹]\n_e_to_c::AbstractFloat\nElectron to CO₂ coefficient\n_j_pot::AbstractFloat\nPotential Electron Transport Rate [μmol e⁻ m⁻² s⁻¹]\n_j_psi::AbstractFloat\nPSI electron transport rate after colimitation\n_k_c::AbstractFloat\nRubisCO coefficient Kc [Pa]\n_k_m::AbstractFloat\nMichaelis-Menten's coefficient [Pa]\n_k_o::AbstractFloat\nRubisCO coefficient Ko [Pa]\n_k_q::AbstractFloat\nMaximal turnover rate of Cytochrome b₆f [e⁻ s⁻¹]\n_r_d::AbstractFloat\nRespiration rate at leaf temperature [μmol m⁻² s⁻¹]\n_v_cmax::AbstractFloat\nMaximal carboxylation rate at leaf temperature [μmol m⁻² s⁻¹]\n_v_qmax::AbstractFloat\nMaximal Cytochrome b₆f activity [μmol e⁻ m⁻² s⁻¹]\n_η::AbstractFloat\nratio between JP700 and JP680\n_η_c::AbstractFloat\nCoupling efficiency of cyclic electron flow [mol ATP mol⁻¹ e⁻]\n_η_l::AbstractFloat\nCoupling efficiency of linear electron flow [mol ATP mol⁻¹ e⁻]\n_γ_star::AbstractFloat\nCO₂ compensation point with the absence of Rd [Pa]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.C3VJPModel","page":"API","title":"ClimaCache.C3VJPModel","text":"mutable struct C3VJPModel{FT<:AbstractFloat} <: ClimaCache.AbstractPhotosynthesisModel{FT<:AbstractFloat}\n\nStructure that stores C3 photosynthesis system information\n\nFields\n\nEFF_1::AbstractFloat\nCoefficient 4.0/4.5 for NADPH/ATP requirement stochiometry, respectively\nEFF_2::AbstractFloat\nCoefficient 8.0/10.5 for NADPH/ATP requirement stochiometry, respectively\nCOLIMIT_CJ::Union{ClimaCache.MinimumColimit{FT}, ClimaCache.QuadraticColimit{FT}, ClimaCache.SerialColimit{FT}} where FT<:AbstractFloat\nAbstractColimit type colimitation method for Ac and Aj => Ai\nCOLIMIT_IP::Union{ClimaCache.MinimumColimit{FT}, ClimaCache.QuadraticColimit{FT}, ClimaCache.SerialColimit{FT}} where FT<:AbstractFloat\nAbstractColimit type colimitation method for Ai and Ap => Ag\nCOLIMIT_J::Union{ClimaCache.MinimumColimit{FT}, ClimaCache.QuadraticColimit{FT}, ClimaCache.SerialColimit{FT}} where FT<:AbstractFloat\nAbstractColimit type colimitation method for J\nTD_JMAX::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Jmax temperature dependency\nTD_KC::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Kc temperature dependency\nTD_KO::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Ko temperature dependency\nTD_R::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type respiration temperature dependency\nTD_VCMAX::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Vcmax temperature dependency\nTD_Γ::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Γ* temperature dependency\nj_max25::AbstractFloat\nMaximal electron transport rate at 298.15 K [μmol m⁻² s⁻¹]\nr_d25::AbstractFloat\nRespiration rate at 298.15 K [μmol m⁻² s⁻¹]\nv_cmax25::AbstractFloat\nMaximal carboxylation rate at 298.15 K [μmol m⁻² s⁻¹]\na_gross::AbstractFloat\nGross photosynthetic rate [μmol m⁻² s⁻¹]\na_net::AbstractFloat\nNet photosynthetic rate [μmol m⁻² s⁻¹]\n_a_c::AbstractFloat\nRubisCO limited photosynthetic rate [μmol m⁻² s⁻¹]\n_a_j::AbstractFloat\nLight limited photosynthetic rate [μmol m⁻² s⁻¹]\n_a_p::AbstractFloat\nProduct limited photosynthetic rate [μmol m⁻² s⁻¹]\n_e_to_c::AbstractFloat\nElectron to CO₂ coefficient\n_j::AbstractFloat\nElectron transport [μmol m⁻² s⁻¹]\n_j_max::AbstractFloat\nMaximal electron transport rate at leaf temperature [μmol m⁻² s⁻¹]\n_j_pot::AbstractFloat\nPotential Electron Transport Rate [μmol m⁻² s⁻¹]\n_k_c::AbstractFloat\nRubisCO coefficient Kc [Pa]\n_k_m::AbstractFloat\nMichaelis-Menten's coefficient [Pa]\n_k_o::AbstractFloat\nRubisCO coefficient Ko [Pa]\n_r_d::AbstractFloat\nRespiration rate at leaf temperature [μmol m⁻² s⁻¹]\n_v_cmax::AbstractFloat\nMaximal carboxylation rate at leaf temperature [μmol m⁻² s⁻¹]\n_γ_star::AbstractFloat\nCO₂ compensation point with the absence of Rd [Pa]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.C4VJPModel","page":"API","title":"ClimaCache.C4VJPModel","text":"mutable struct C4VJPModel{FT<:AbstractFloat} <: ClimaCache.AbstractPhotosynthesisModel{FT<:AbstractFloat}\n\nStructure that stores C4 photosynthesis system information\n\nFields\n\nCOLIMIT_CJ::Union{ClimaCache.MinimumColimit{FT}, ClimaCache.QuadraticColimit{FT}, ClimaCache.SerialColimit{FT}} where FT<:AbstractFloat\nAbstractColimit type colimitation method for Ac and Aj => Ai\nCOLIMIT_IP::Union{ClimaCache.MinimumColimit{FT}, ClimaCache.QuadraticColimit{FT}, ClimaCache.SerialColimit{FT}} where FT<:AbstractFloat\nAbstractColimit type colimitation method for Ai and Ap => Ag\nTD_KPEP::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Kpep temperature dependency\nTD_R::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type  respiration temperature dependency\nTD_VCMAX::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Vcmax temperature dependency\nTD_VPMAX::Union{ClimaCache.Arrhenius{FT}, ClimaCache.ArrheniusPeak{FT}, ClimaCache.Q10{FT}} where FT<:AbstractFloat\nAbstractTemperatureDependency type Vpmax temperature dependency\nr_d25::AbstractFloat\nRespiration rate at 298.15 K [μmol m⁻² s⁻¹]\nv_cmax25::AbstractFloat\nMaximal carboxylation rate at 298.15 K [μmol m⁻² s⁻¹]\nv_pmax25::AbstractFloat\nMaximal PEP carboxylation rate at 298.15 K [μmol m⁻² s⁻¹]\na_gross::AbstractFloat\nGross photosynthetic rate [μmol m⁻² s⁻¹]\na_net::AbstractFloat\nNet photosynthetic rate [μmol m⁻² s⁻¹]\n_a_c::AbstractFloat\nRubisCO limited photosynthetic rate [μmol m⁻² s⁻¹]\n_a_j::AbstractFloat\nLight limited photosynthetic rate [μmol m⁻² s⁻¹]\n_a_p::AbstractFloat\nProduct limited photosynthetic rate [μmol m⁻² s⁻¹]\n_e_to_c::AbstractFloat\nElectron to CO₂ coefficient\n_j_pot::AbstractFloat\nPotential Electron Transport Rate [μmol m⁻² s⁻¹]\n_k_pep::AbstractFloat\nPEP coefficient Kpep [Pa]\n_r_d::AbstractFloat\nRespiration rate at leaf temperature [μmol m⁻² s⁻¹]\n_v_cmax::AbstractFloat\nMaximal carboxylation rate at leaf temperature [μmol m⁻² s⁻¹]\n_v_pmax::AbstractFloat\nMaximal PEP carboxylation rate at leaf temperature [μmol m⁻² s⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractPhotosynthesisMode","page":"API","title":"ClimaCache.AbstractPhotosynthesisMode","text":"abstract type AbstractPhotosynthesisMode\n\nHierarchy of AbstractPhotosynthesisMode:\n\nGCO₂Mode\nPCO₂Mode\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.GCO₂Mode","page":"API","title":"ClimaCache.GCO₂Mode","text":"An empty structure to signal the function to calculate photosynthetic rates based on leaf diffusive conductance to CO₂ \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.PCO₂Mode","page":"API","title":"ClimaCache.PCO₂Mode","text":"An empty structure to signal the function to calculate photosynthetic rates based on CO₂ partial pressure \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractTemperatureDependency","page":"API","title":"ClimaCache.AbstractTemperatureDependency","text":"abstract type AbstractTemperatureDependency{FT<:AbstractFloat}\n\nHierarchy of AbstractTemperatureDependency:\n\nArrhenius\nArrheniusPeak\nQ10\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Arrhenius","page":"API","title":"ClimaCache.Arrhenius","text":"mutable struct Arrhenius{FT<:AbstractFloat} <: ClimaCache.AbstractTemperatureDependency{FT<:AbstractFloat}\n\nAn Arrhenius type struct using\n\nY_1 = Y_0 cdot exp left( dfracH_aR T_0 - dfracH_aR T_1 right)\n\nFields\n\nT_REF::AbstractFloat\nReference temperature [K]\nVAL_REF::AbstractFloat\nUncorrected vakye at reference temperature\nΔHA::AbstractFloat\nActivation energy\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.ArrheniusPeak","page":"API","title":"ClimaCache.ArrheniusPeak","text":"mutable struct ArrheniusPeak{FT<:AbstractFloat} <: ClimaCache.AbstractTemperatureDependency{FT<:AbstractFloat}\n\nAn ArrheniusPeak type struct using\n\nY_1 = Y_0 cdot exp left( dfracH_aR T_0 - dfracH_aR T_1 right)\n          cdot dfrac 1 + exp left( dfracS_v T_0 - H_dR T_0 right) \n                         1 + exp left( dfracS_v T_1 - H_dR T_1 right) \n\nFields\n\nT_REF::AbstractFloat\nReference temperature [K]\nVAL_REF::AbstractFloat\nUncorrected vakye at reference temperature\nΔHA::AbstractFloat\nActivation energy\nΔHD::AbstractFloat\nDeactivation energy\nΔSV::AbstractFloat\nEntropy factor\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Q10","page":"API","title":"ClimaCache.Q10","text":"mutable struct Q10{FT<:AbstractFloat} <: ClimaCache.AbstractTemperatureDependency{FT<:AbstractFloat}\n\nAn Q10 type struct using\n\nY_1 = Y_0 cdot Q_10 ^ dfracT_1 - T_010\n\nFields\n\nQ_10::AbstractFloat\nPower of Q10 correction\nT_REF::AbstractFloat\nReference temperature [K]\nVAL_REF::AbstractFloat\nUncorrected vakye at reference temperature\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractLeaf","page":"API","title":"ClimaCache.AbstractLeaf","text":"abstract type AbstractLeaf{FT<:AbstractFloat}\n\nAbstract type for leaf\n\nHierarchy of the AbstractLeaf\n\nLeaf\nLeaves1D\nLeaves2D\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Leaf","page":"API","title":"ClimaCache.Leaf","text":"mutable struct Leaf{FT<:AbstractFloat} <: ClimaCache.AbstractLeaf{FT<:AbstractFloat}\n\nStructure to save leaf parameters. This structure is meant for leaf level research and canopy radiative transfer scheme without sunlit and shaded partitioning (ppar and ppar-dependent variables).\n\nFields\n\nAPAR_CAR::Bool\nWhether APAR absorbed by carotenoid is counted as PPAR\nCP::AbstractFloat\nSpecific heat capacity of leaf [J K⁻¹ kg⁻¹]\nG_LIMITS::Vector{FT} where FT<:AbstractFloat\nMinimal and maximum stomatal conductance for H₂O at 25 °C [mol m⁻² s⁻¹]\nWIDTH::AbstractFloat\nLeaf width [m]\nBIO::Union{ClimaCache.BroadbandLeafBiophysics{FT}, ClimaCache.HyperspectralLeafBiophysics{FT}} where FT<:AbstractFloat\nAbstractLeafBiophysics type leaf biophysical parameters\nHS::ClimaCache.LeafHydraulics\nLeafHydraulics type leaf hydraulic system\nPRC::Union{ClimaCache.CytochromeReactionCenter{FT}, ClimaCache.VJPReactionCenter{FT}} where FT<:AbstractFloat\nAbstractReactionCenter type photosynthesis reaction center\nPSM::Union{ClimaCache.C3CytochromeModel{FT}, ClimaCache.C3VJPModel{FT}, ClimaCache.C4VJPModel{FT}} where FT<:AbstractFloat\nAbstractPhotosynthesisModel type photosynthesis model\nSM::ClimaCache.AbstractStomataModel\nStomatal model\ng_CO₂_b::AbstractFloat\nBoundary leaf diffusive conductance to CO₂ [mol m⁻² s⁻¹]\nppar::AbstractFloat\nAbsorbed photosynthetically active radiation used for photosynthesis [μmol m⁻² s⁻¹]\nt::AbstractFloat\nCurrent leaf temperature\ne::AbstractFloat\nTotal stored energy per area [J m⁻²]\ng_H₂O_s::AbstractFloat\nStomatal conductance to water vapor [mol m⁻² s⁻¹]\n∂e∂t::AbstractFloat\nMarginal increase in energy [W m⁻²]\n∂g∂t::AbstractFloat\nMarginal increase of conductance per time [mol m⁻² s⁻²]\na_gross::AbstractFloat\nGross photosynthetic rate [μmol m⁻² s⁻¹]\na_net::AbstractFloat\nNet photosynthetic rate [μmol m⁻² s⁻¹]\n_cp::AbstractFloat\nCombined specific heat capacity of leaf per area [J K⁻¹ m⁻²]\n_g_CO₂::AbstractFloat\nTotal leaf diffusive conductance to CO₂ [mol m⁻² s⁻¹]\n_p_CO₂_i::AbstractFloat\nLeaf internal CO₂ partial pressure [Pa]\n_p_CO₂_s::AbstractFloat\nLeaf surface CO₂ partial pressure [Pa]\n_t::AbstractFloat\nLast leaf temperature. If different from t, then make temperature correction\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Leaves1D","page":"API","title":"ClimaCache.Leaves1D","text":"mutable struct Leaves1D{FT<:AbstractFloat} <: ClimaCache.AbstractLeaf{FT<:AbstractFloat}\n\nStructure to save leaf parameters for a single canopy layer. This structure is meant for canopy level research and canopy radiative transfer scheme with sunlit and shaded partitioning.\n\nFields\n\nCP::AbstractFloat\nSpecific heat capacity of leaf [J K⁻¹ kg⁻¹]\nG_LIMITS::Vector{FT} where FT<:AbstractFloat\nMinimal and maximum stomatal conductance for H₂O at 25 °C [mol m⁻² s⁻¹]\nWIDTH::AbstractFloat\nLeaf width [m]\nBIO::ClimaCache.BroadbandLeafBiophysics\nBroadbandLeafBiophysics type leaf biophysical parameters\nHS::ClimaCache.LeafHydraulics\nLeafHydraulics type leaf hydraulic system\nHS2::ClimaCache.LeafHydraulics\nLeafHydraulics type leaf hydraulic system used for other calculations (say sunlit and shaded leaf partitioning)\nPRC::Union{ClimaCache.CytochromeReactionCenter{FT}, ClimaCache.VJPReactionCenter{FT}} where FT<:AbstractFloat\nAbstractReactionCenter type photosynthesis reaction center\nPSM::Union{ClimaCache.C3CytochromeModel{FT}, ClimaCache.C3VJPModel{FT}, ClimaCache.C4VJPModel{FT}} where FT<:AbstractFloat\nAbstractPhotosynthesisModel type photosynthesis model\nSM::ClimaCache.AbstractStomataModel\nStomatal model\ng_CO₂_b::Vector{FT} where FT<:AbstractFloat\nBoundary leaf diffusive conductance to CO₂ [mol m⁻² s⁻¹]\nppar::Vector{FT} where FT<:AbstractFloat\nAbsorbed photosynthetically active radiation used for photosynthesis [μmol m⁻² s⁻¹]\nt::Vector{FT} where FT<:AbstractFloat\nCurrent leaf temperature\ne::Vector{FT} where FT<:AbstractFloat\nTotal stored energy per area [J m⁻²]\ng_H₂O_s::Vector{FT} where FT<:AbstractFloat\nStomatal conductance to water vapor [mol m⁻² s⁻¹]\n∂e∂t::Vector{FT} where FT<:AbstractFloat\nMarginal increase in energy [W m⁻²]\n∂g∂t::Vector{FT} where FT<:AbstractFloat\nMarginal increase of conductance per time [mol m⁻² s⁻²]\na_gross::Vector{FT} where FT<:AbstractFloat\nGross photosynthetic rate [μmol m⁻² s⁻¹]\na_net::Vector{FT} where FT<:AbstractFloat\nNet photosynthetic rate [μmol m⁻² s⁻¹]\n_cp::Vector{FT} where FT<:AbstractFloat\nCombined specific heat capacity of leaf per area [J K⁻¹ m⁻²]\n_g_CO₂::Vector{FT} where FT<:AbstractFloat\nTotal leaf diffusive conductance to CO₂ [mol m⁻² s⁻¹]\n_p_CO₂_i::Vector{FT} where FT<:AbstractFloat\nLeaf internal CO₂ partial pressure [Pa]\n_p_CO₂_s::Vector{FT} where FT<:AbstractFloat\nLeaf surface CO₂ partial pressure [Pa]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Leaves2D","page":"API","title":"ClimaCache.Leaves2D","text":"mutable struct Leaves2D{FT<:AbstractFloat} <: ClimaCache.AbstractLeaf{FT<:AbstractFloat}\n\nStructure to save leaf parameters for a single canopy layer. This structure is meant for canopy level research and canopy radiative transfer scheme with sunlit and shaded partitioning as well as leaf     angular distribution.\n\nFields\n\nDIM_AZI::Int64\nDimension of azimuth angles\nDIM_INCL::Int64\nDimension of inclination angles\nAPAR_CAR::Bool\nWhether APAR absorbed by carotenoid is counted as PPAR\nCP::AbstractFloat\nSpecific heat capacity of leaf [J K⁻¹ kg⁻¹]\nG_LIMITS::Vector{FT} where FT<:AbstractFloat\nMinimal and maximum stomatal conductance for H₂O at 25 °C [mol m⁻² s⁻¹]\nWIDTH::AbstractFloat\nLeaf width [m]\nBIO::ClimaCache.HyperspectralLeafBiophysics\nHyperspectralLeafBiophysics type leaf biophysical parameters\nHS::ClimaCache.LeafHydraulics\nLeafHydraulics type leaf hydraulic system\nPRC::Union{ClimaCache.CytochromeReactionCenter{FT}, ClimaCache.VJPReactionCenter{FT}} where FT<:AbstractFloat\nAbstractReactionCenter type photosynthesis reaction center\nPSM::Union{ClimaCache.C3CytochromeModel{FT}, ClimaCache.C3VJPModel{FT}, ClimaCache.C4VJPModel{FT}} where FT<:AbstractFloat\nAbstractPhotosynthesisModel type photosynthesis model\nSM::ClimaCache.AbstractStomataModel\nStomatal model\ng_CO₂_b::AbstractFloat\nBoundary leaf diffusive conductance to CO₂ [mol m⁻² s⁻¹]\nppar_shaded::AbstractFloat\nAbsorbed photosynthetically active radiation used for photosynthesis for shaded leaves [μmol m⁻² s⁻¹]\nppar_sunlit::Matrix{FT} where FT<:AbstractFloat\nAbsorbed photosynthetically active radiation used for photosynthesis for sunlit leaves [μmol m⁻² s⁻¹]\nt::AbstractFloat\nCurrent leaf temperature [K]\ne::AbstractFloat\nTotal stored energy per area [J m⁻²]\ng_H₂O_s_shaded::AbstractFloat\nStomatal conductance to water vapor for shaded leaves [mol m⁻² s⁻¹]\ng_H₂O_s_sunlit::Matrix{FT} where FT<:AbstractFloat\nStomatal conductance to water vapor for sunlit leaves [mol m⁻² s⁻¹]\n∂e∂t::AbstractFloat\nMarginal increase in energy [W m⁻²]\n∂g∂t_shaded::AbstractFloat\nMarginal increase of conductance per time for shaded leaves [mol m⁻² s⁻²]\n∂g∂t_sunlit::Matrix{FT} where FT<:AbstractFloat\nMarginal increase of conductance per timefor sunlit leaves [mol m⁻² s⁻²]\na_gross_shaded::AbstractFloat\nGross photosynthetic rate for shaded leaves [μmol m⁻² s⁻¹]\na_gross_sunlit::Matrix{FT} where FT<:AbstractFloat\nGross photosynthetic rate for sunlit leaves [μmol m⁻² s⁻¹]\na_net_shaded::AbstractFloat\nNet photosynthetic rate for shaded leaves [μmol m⁻² s⁻¹]\na_net_sunlit::Matrix{FT} where FT<:AbstractFloat\nNet photosynthetic rate for sunlit leaves [μmol m⁻² s⁻¹]\nϕ_f_shaded::AbstractFloat\nFluorescence quantum yield for shaded leaves [-]\nϕ_f_sunlit::Matrix{FT} where FT<:AbstractFloat\nFluorescence quantum yield for sunlit leaves [-]\n_cp::AbstractFloat\nCombined specific heat capacity of leaf per area [J K⁻¹ m⁻²]\n_g_CO₂_shaded::AbstractFloat\nTotal leaf diffusive conductance to CO₂ for shaded leaves [mol m⁻² s⁻¹]\n_g_CO₂_sunlit::Matrix{FT} where FT<:AbstractFloat\nTotal leaf diffusive conductance to CO₂ for sunlit leaves [mol m⁻² s⁻¹]\n_p_CO₂_i_shaded::AbstractFloat\nLeaf internal CO₂ partial pressure for shaded leaves [Pa]\n_p_CO₂_i_sunlit::Matrix{FT} where FT<:AbstractFloat\nLeaf internal CO₂ partial pressure for sunlit leaves [Pa]\n_p_CO₂_s_shaded::AbstractFloat\nLeaf surface CO₂ partial pressure for shaded leaves [Pa]\n_p_CO₂_s_sunlit::Matrix{FT} where FT<:AbstractFloat\nLeaf surface CO₂ partial pressure for sunlit leaves [Pa]\n_t::AbstractFloat\nLast leaf temperature. If different from t, then make temperature correction\n\n\n\n\n\n","category":"type"},{"location":"API/#Stomatal-Models","page":"API","title":"Stomatal Models","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AbstractBetaParameter\nBetaParameterG1\nBetaParameterKleaf\nBetaParameterKsoil\nBetaParameterPleaf\nBetaParameterPsoil\nBetaParameterVcmax\nBetaParameterΘ\nBetaFunction\nAbstractStomataModel\nAndereggSM\nBallBerrySM\nEllerSM\nGentineSM\nLeuningSM\nMedlynSM\nSperrySM\nWangSM\nWang2SM","category":"page"},{"location":"API/#ClimaCache.AbstractBetaParameter","page":"API","title":"ClimaCache.AbstractBetaParameter","text":"abstract type AbstractBetaParameter\n\nHierarchy of AbstractBetaParameter:\n\nBetaParameterG1 PARAM_Y\nBetaParameterKleaf PARAM_X\nBetaParameterKsoil PARAM_X\nBetaParameterPleaf PARAM_X\nBetaParameterPsoil PARAM_X\nBetaParameterVcmax PARAM_Y\nBetaParameterΘ PARAM_X\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BetaParameterG1","page":"API","title":"ClimaCache.BetaParameterG1","text":"Empty struct indicating that the function tunes G1 parameter of an empirical model \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BetaParameterKleaf","page":"API","title":"ClimaCache.BetaParameterKleaf","text":"Empty struct indicating that the beta function is based on Kleaf \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BetaParameterKsoil","page":"API","title":"ClimaCache.BetaParameterKsoil","text":"Empty struct indicating that the beta function is based on Ksoil \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BetaParameterPleaf","page":"API","title":"ClimaCache.BetaParameterPleaf","text":"Empty struct indicating that the beta function is based on Pleaf \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BetaParameterPsoil","page":"API","title":"ClimaCache.BetaParameterPsoil","text":"Empty struct indicating that the beta function is based on Psoil \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BetaParameterVcmax","page":"API","title":"ClimaCache.BetaParameterVcmax","text":"Empty struct indicating that the function tunes Vcmax for an empirical model \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BetaParameterΘ","page":"API","title":"ClimaCache.BetaParameterΘ","text":"Empty struct indicating that the beta function is based on soil water content \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BetaFunction","page":"API","title":"ClimaCache.BetaFunction","text":"mutable struct BetaFunction{FT<:AbstractFloat}\n\nStruct to tune G1 or Vcmax based on leaf hydraulic conductance\n\nFields\n\nFUNC::Function\nFunction to turn variables to β tuning factor\nPARAM_X::Union{ClimaCache.BetaParameterKleaf, ClimaCache.BetaParameterKsoil, ClimaCache.BetaParameterPleaf, ClimaCache.BetaParameterPsoil, ClimaCache.BetaParameterΘ}\nInput parameter to base on\nPARAM_Y::Union{ClimaCache.BetaParameterG1, ClimaCache.BetaParameterVcmax}\nTarget parameter to tune\nβ₁::AbstractFloat\nTuning factor computed\nβ₂::AbstractFloat\nTuning factor computed for HS2\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractStomataModel","page":"API","title":"ClimaCache.AbstractStomataModel","text":"abstract type AbstractStomataModel{FT<:AbstractFloat}\n\nHierarchy of AbstractStomataModel:\n\nAndereggSM\nBallBerrySM\nEllerSM\nGentineSM\nLeuningSM\nMedlynSM\nSperrySM\nWangSM\nWang2SM\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AndereggSM","page":"API","title":"ClimaCache.AndereggSM","text":"mutable struct AndereggSM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nStruct for Anderegg stomatal model. The equation used for Anderegg type model is\n\ndfracΘE = dfrac2aP + bK\n\nwhere K is dfracEP.\n\nFields\n\nA::AbstractFloat\nQuadratic equation parameter [μmol m⁻² s⁻¹ MPa⁻²]\nB::AbstractFloat\nQuadratic equation parameter [μmol m⁻² s⁻¹ MPa⁻¹]\nK::AbstractFloat\nSlope constant [mol² m⁻² s⁻¹ μmol⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BallBerrySM","page":"API","title":"ClimaCache.BallBerrySM","text":"mutable struct BallBerrySM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nStruct for Ball Berry stomatal model. The equation used for Ball-Berry type model is\n\ngs = g0 + g1  RH  dfracACs\n\nFields\n\nG0::AbstractFloat\nMinimal stomatal conductance [mol m⁻² s⁻¹]\nG1::AbstractFloat\nSlope of conductance-photosynthesis correlation [-]\nβ::ClimaCache.BetaFunction\nBeta function to force stomatal response to soil moisture\nτ::AbstractFloat\nTime constant for the prognostic stomatal conductance [s]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.EllerSM","page":"API","title":"ClimaCache.EllerSM","text":"mutable struct EllerSM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nEmpty struct for Eller stomatal model. The equation used for Eller type model is\n\ndfracΘE = -dfracKE  dfracAK\n\nwhere K is dfracEP.\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.GentineSM","page":"API","title":"ClimaCache.GentineSM","text":"mutable struct GentineSM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nStruct for Gentine stomatal model. The equation used for Gentine type model is\n\ngs = g0 + g1  dfrack_leafk_max  dfracACi\n\nFields\n\nG0::AbstractFloat\nMinimal stomatal conductance [mol m⁻² s⁻¹]\nG1::AbstractFloat\nSlope of conductance-photosynthesis correlation [-]\nβ::ClimaCache.BetaFunction\nBeta function to force stomatal response to soil moisture\nτ::AbstractFloat\nTime constant for the prognostic stomatal conductance [s]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.LeuningSM","page":"API","title":"ClimaCache.LeuningSM","text":"mutable struct LeuningSM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nStruct for Leuning stomatal model. The equation used for Leuning type model is\n\ngs = g0 + g1  dfracACs - Γ^*  dfrac11 + dfracVPDd0\n\nFields\n\nD0::AbstractFloat\nFitting parameter of d/d0 below the fraction, same unit as vpd [Pa]\nG0::AbstractFloat\nMinimal stomatal conductance [mol m⁻² s⁻¹]\nG1::AbstractFloat\nSlope of conductance-photosynthesis correlation [-]\nβ::ClimaCache.BetaFunction\nBeta function to force stomatal response to soil moisture\nτ::AbstractFloat\nTime constant for the prognostic stomatal conductance [s]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.MedlynSM","page":"API","title":"ClimaCache.MedlynSM","text":"mutable struct MedlynSM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nStruct for Medlyn stomatal model. The equation used for Medlyn type model is\n\ngs = g0 + 16  left( 1 + dfracg1sqrtVPD right)  dfracACa\n\nFields\n\nG0::AbstractFloat\nMinimal stomatal conductance [mol m⁻² s⁻¹]\nG1::AbstractFloat\nSlope of conductance-photosynthesis correlation [sqrt(Pa)]\nβ::ClimaCache.BetaFunction\nBeta function to force stomatal response to soil moisture\nτ::AbstractFloat\nTime constant for the prognostic stomatal conductance [s]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.SperrySM","page":"API","title":"ClimaCache.SperrySM","text":"mutable struct SperrySM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nEmpty struct for Sperry stomatal model. The equation used for Sperry type model is\n\ndfracΘE = -dfracKE  dfracA_maxK_max\n\nwhere K is dfracEP.\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.WangSM","page":"API","title":"ClimaCache.WangSM","text":"mutable struct WangSM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nEmpty struct for Wang stomatal model. The equation used for Wang type model is\n\ndfracΘE = dfracAE_crit - E\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Wang2SM","page":"API","title":"ClimaCache.Wang2SM","text":"mutable struct Wang2SM{FT<:AbstractFloat} <: ClimaCache.AbstractStomataModel{FT<:AbstractFloat}\n\nEmpty struct for a new Wang stomatal model modified from Anderegg model. The equation used for new Wang2SM type model is\n\ndfracΘE = dfracaAPK\n\nwhere K is dfracEP.\n\nFields\n\nA::AbstractFloat\nQuadratic equation parameter [MPa⁻²]\nK::AbstractFloat\nSlope constant [mol² m⁻² s⁻¹ μmol⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#Radiation","page":"API","title":"Radiation","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"WaveLengthSet\nAbstractRadiation\nBroadbandRadiation\nHyperspectralRadiation\nHyperspectralAbsorption\nSunSensorGeometry\nHyperspectralMLCanopyOpticalProperty\nAbstractCanopyRadiationProfile\nBroadbandSLCanopyRadiationProfile\nHyperspectralMLCanopyRadiationProfile\nAbstractLIDFAlgorithm\nVerhoefLIDF\nAbstractCanopy\nBroadbandSLCanopy\nHyperspectralMLCanopy","category":"page"},{"location":"API/#ClimaCache.WaveLengthSet","page":"API","title":"ClimaCache.WaveLengthSet","text":"struct WaveLengthSet{FT<:AbstractFloat}\n\nImmutable structure that stores wave length information.\n\nFields\n\nDATASET::String\nFile path to the Netcdf dataset\nWL_NIR::Vector{FT} where FT<:AbstractFloat\nWavelength limits for NIR [nm]\nWL_PAR::Vector{FT} where FT<:AbstractFloat\nWavelength limits for PAR [nm]\nWL_SIF::Vector{FT} where FT<:AbstractFloat\nWavelength limits for SIF emission [nm]\nWL_SIFE::Vector{FT} where FT<:AbstractFloat\nWavelength limits for SIF excitation [nm]\nΛ::Vector{FT} where FT<:AbstractFloat\nWavelength (bins) [nm]\nΛ_LOWER::Vector{FT} where FT<:AbstractFloat\nLower boundary wavelength [nm]\nΛ_UPPER::Vector{FT} where FT<:AbstractFloat\nUpper boundary wavelength [nm]\nIΛ_NIR::Vector{Int64}\nIndicies of Λ_NIR in Λ\nIΛ_PAR::Vector{Int64}\nIndicies of Λ_PAR in Λ\nIΛ_SIF::Vector{Int64}\nIndicies of Λ_SIF in Λ\nIΛ_SIFE::Vector{Int64}\nIndicies of Λ_SIFE in Λ\nDIM_NIR::Int64\nNumber of wavelength bins for NIR\nDIM_PAR::Int64\nNumber of wavelength bins for PAR\nDIM_SIF::Int64\nNumber of wavelength bins for SIF\nDIM_SIFE::Int64\nNumber of wavelength bins for SIFE\nDIM_WL::Int64\nNumber of wavelength bins\nΔΛ::Vector{FT} where FT<:AbstractFloat\nDifferential wavelength [nm]\nΔΛ_PAR::Vector{FT} where FT<:AbstractFloat\nDifferential wavelength for PAR [nm]\nΔΛ_SIFE::Vector{FT} where FT<:AbstractFloat\nDifferential wavelength for SIF excitation [nm]\nΛ_PAR::Vector{FT} where FT<:AbstractFloat\nWavelength bins for PAR [nm]\nΛ_SIF::Vector{FT} where FT<:AbstractFloat\nWavelength bins for SIF [nm]\nΛ_SIFE::Vector{FT} where FT<:AbstractFloat\nWavelength bins for SIF excitation [nm]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractRadiation","page":"API","title":"ClimaCache.AbstractRadiation","text":"abstract type AbstractRadiation{FT<:AbstractFloat}\n\nHierarchy of AbstractRadiation:\n\nBroadbandRadiation\nHyperspectralRadiation\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BroadbandRadiation","page":"API","title":"ClimaCache.BroadbandRadiation","text":"mutable struct BroadbandRadiation{FT<:AbstractFloat} <: ClimaCache.AbstractRadiation{FT<:AbstractFloat}\n\nStructure that stores broadband radiation information\n\nFields\n\ne_diffuse_nir::AbstractFloat\nDiffuse radiation from NIR region [W m⁻²]\ne_diffuse_par::AbstractFloat\nDiffuse radiation from PAR region [W m⁻²]\ne_direct_nir::AbstractFloat\nDirect radiation from NIR region [W m⁻²]\ne_direct_par::AbstractFloat\nDirect radiation from PAR region [W m⁻²]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.HyperspectralRadiation","page":"API","title":"ClimaCache.HyperspectralRadiation","text":"mutable struct HyperspectralRadiation{FT<:AbstractFloat} <: ClimaCache.AbstractRadiation{FT<:AbstractFloat}\n\nStructure that stores hyperspectral radiation information\n\nFields\n\ne_diffuse::Vector{FT} where FT<:AbstractFloat\nDiffuse radiation [mW m⁻² nm⁻¹]\ne_direct::Vector{FT} where FT<:AbstractFloat\nDirect radiation [mW m⁻² nm⁻¹]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.HyperspectralAbsorption","page":"API","title":"ClimaCache.HyperspectralAbsorption","text":"struct HyperspectralAbsorption{FT<:AbstractFloat}\n\nImmutable struct that contains leaf biophysical traits used to run leaf reflection and transmittance.\n\nFields\n\nDATASET::String\nFile path to the Netcdf dataset\nK_ANT::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of anthocynanin [-]\nK_BROWN::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of senescent material (brown pigments) [-]\nK_CAB::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of chlorophyll a and b [-]\nK_CAR_V::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of violaxanthin carotenoid [-]\nK_CAR_Z::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of zeaxanthin carotenoid [-]\nK_CBC::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of carbon-based constituents [-]\nK_H₂O::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of water [-]\nK_LMA::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of dry matter [-]\nK_PRO::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of protein [-]\nK_PS::Vector{FT} where FT<:AbstractFloat\nSpecific absorption coefficients of PS I and II [-]\nNR::Vector{FT} where FT<:AbstractFloat\nRefractive index [-]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.SunSensorGeometry","page":"API","title":"ClimaCache.SunSensorGeometry","text":"mutable struct SunSensorGeometry{FT<:AbstractFloat}\n\nStructure that stores sun sensor geometry information.\n\nFields\n\nHAA::AbstractFloat\nHill facing azimuth angle [°], 0 for North, 180 for south\nHSA::AbstractFloat\nHill slope angle [°]\nsaa::AbstractFloat\nSolar azimuth angle [°], a function of time\nsza::AbstractFloat\nSolar zenith angle [°], a function of lat and time\nvaa::AbstractFloat\nViewing azimuth angle [°]\nvza::AbstractFloat\nViewing zenith angle [°]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.HyperspectralMLCanopyOpticalProperty","page":"API","title":"ClimaCache.HyperspectralMLCanopyOpticalProperty","text":"mutable struct HyperspectralMLCanopyOpticalProperty{FT<:AbstractFloat}\n\nStructure for Verhoef LIDF algorithm\n\nFields\n\nDIM_AZI::Int64\nDimension of azimuth angles\nDIM_INCL::Int64\nDimension of inclination angles\nDIM_LAYER::Int64\nDimension of canopy layers\nDIM_SIF::Int64\nDimension of SIF wave length bins\nDIM_SIFE::Int64\nDimension of SIF excitation wave length bins\nDIM_WL::Int64\nDimension of short wave length bins\nddb::AbstractFloat\nBackward diffuse->diffuse scatter weight\nddf::AbstractFloat\nForward diffuse->diffuse scatter weight\ndob::AbstractFloat\nBackward diffuse->observer scatter weight\ndof::AbstractFloat\nForward diffuse->observer scatter weight\nfo::Matrix{FT} where FT<:AbstractFloat\nConversion factor fo for angle towards observer at different inclination and azimuth angles\nfs::Matrix{FT} where FT<:AbstractFloat\nConversion factor fs for angles from solar at different inclination and azimuth angles\nko::AbstractFloat\nObserver direction beam extinction coefficient weight (diffuse)\nks::AbstractFloat\nSolar direction beam extinction coefficient weight (direct)\np_sunlit::Vector{FT} where FT<:AbstractFloat\nProbability of directly viewing a leaf in solar direction at different layers\npo::Vector{FT} where FT<:AbstractFloat\nProbability of directly viewing a leaf in observer direction at different layer boundaries\nps::Vector{FT} where FT<:AbstractFloat\nProbability of directly viewing a leaf in solar direction at different layer boundaries\npso::Vector{FT} where FT<:AbstractFloat\nBi-directional probability of directly viewing a leaf at different layer boundaries (solar->canopy->observer)\nsdb::AbstractFloat\nDirectional->diffuse backscatter weight\nsdf::AbstractFloat\nDirectional->diffuse forward scatter weight\nsob::AbstractFloat\nSolar directional->observer weight of specular2directional backscatter coefficient\nsof::AbstractFloat\nSolar directional->observer weight of specular2directional forward coefficient\nϵ::Vector{FT} where FT<:AbstractFloat\nEffective emissivity for different layers\nρ_dd::Matrix{FT} where FT<:AbstractFloat\nEffective reflectance for diffuse->diffuse\nρ_lw::Vector{FT} where FT<:AbstractFloat\nEffective reflectance for longwave radiation\nρ_sd::Matrix{FT} where FT<:AbstractFloat\nEffective reflectance for directional->diffuse\nσ_ddb::Matrix{FT} where FT<:AbstractFloat\nBackward scattering coefficient for diffuse->diffuse at different layers and wavelength bins\nσ_ddf::Matrix{FT} where FT<:AbstractFloat\nForward scattering coefficient for diffuse->diffuse at different layers and wavelength bins\nσ_dob::Matrix{FT} where FT<:AbstractFloat\nBackward scattering coefficient for diffuse->observer at different layers and wavelength bins\nσ_dof::Matrix{FT} where FT<:AbstractFloat\nForward scattering coefficient for diffuse->observer at different layers and wavelength bins\nσ_sdb::Matrix{FT} where FT<:AbstractFloat\nBackward scattering coefficient for solar directional->diffuse at different layers and wavelength bins\nσ_sdf::Matrix{FT} where FT<:AbstractFloat\nForward scattering coefficient for solar directional->diffuse at different layers and wavelength bins\nσ_so::Matrix{FT} where FT<:AbstractFloat\nBidirectional from solar to observer scattering coefficient at different layers and wavelength bins\nτ_dd::Matrix{FT} where FT<:AbstractFloat\nEffective tranmittance for diffuse->diffuse\nτ_lw::Vector{FT} where FT<:AbstractFloat\nEffective tranmittance for longwave radiation\nτ_sd::Matrix{FT} where FT<:AbstractFloat\nEffective tranmittance for solar directional->diffuse\n_Co::Vector{FT} where FT<:AbstractFloat\ncos(inclination) * cos(vza) at different inclination angles\n_Cs::Vector{FT} where FT<:AbstractFloat\ncos(inclination) * cos(sza) at different inclination angles\n_So::Vector{FT} where FT<:AbstractFloat\nsin(inclination) * sin(vza) at different inclination angles\n_Ss::Vector{FT} where FT<:AbstractFloat\nsin(inclination) * sin(sza) at different inclination angles\n_abs_fo::Matrix{FT} where FT<:AbstractFloat\nabs of fo\n_abs_fs::Matrix{FT} where FT<:AbstractFloat\nabs of fs\n_abs_fs_fo::Matrix{FT} where FT<:AbstractFloat\nabs of fs * fo\n_bf::AbstractFloat\nWeighted sum of cos²(inclination)\n_cos_θ_azi_raa::Vector{FT} where FT<:AbstractFloat\nCosine of Θ_AZI - raa\n_fo_cos_θ_incl::Matrix{FT} where FT<:AbstractFloat\nfo * cos Θ_INCL\n_fs_cos_θ_incl::Matrix{FT} where FT<:AbstractFloat\nfs * cos Θ_INCL\n_fs_fo::Matrix{FT} where FT<:AbstractFloat\nfs * fo\n_ko::Vector{FT} where FT<:AbstractFloat\nOutgoing beam extinction coefficient weights at different inclination angles\n_ks::Vector{FT} where FT<:AbstractFloat\nSolar beam extinction coefficient weights at different inclination angles\n_mat⁺::Matrix{FT} where FT<:AbstractFloat\nUpwelling matrix for SIF excitation\n_mat⁻::Matrix{FT} where FT<:AbstractFloat\nDownwelling matrix for SIF excitation\n_sb::Vector{FT} where FT<:AbstractFloat\nBackward scattering coefficients at different inclination angles\n_sf::Vector{FT} where FT<:AbstractFloat\nForward scattering coefficients at different inclination angles\n_tmp_mat_incl_azi_1::Matrix{FT} where FT<:AbstractFloat\nTemporary cache used for matrix adding up purpose (DIMINCL * DIMAZI)\n_tmp_mat_incl_azi_2::Matrix{FT} where FT<:AbstractFloat\nTemporary cache used for matrix adding up purpose (DIMINCL * DIMAZI)\n_tmp_vec_azi::Vector{FT} where FT<:AbstractFloat\nTemporary cache used for vector operations (DIM_AZI)\n_tmp_vec_layer::Vector{FT} where FT<:AbstractFloat\nTemporary cache used for vector operations (DIM_LAYER)\n_tmp_vec_sif_1::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF information\n_tmp_vec_sif_2::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF information\n_tmp_vec_sif_3::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF information\n_tmp_vec_sif_4::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF information\n_tmp_vec_sif_5::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF information\n_tmp_vec_sif_6::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF information\n_tmp_vec_sife_1::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF excitation information\n_tmp_vec_sife_2::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF excitation information\n_tmp_vec_sife_3::Vector{FT} where FT<:AbstractFloat\nCache variable to store the SIF excitation information\n_tmp_vec_λ::Vector{FT} where FT<:AbstractFloat\nTemporary cache used for vector operations (DIM_WL)\n_ρ_dd::Matrix{FT} where FT<:AbstractFloat\nReflectance for diffuse->diffuse at each canopy layer\n_ρ_lw::Vector{FT} where FT<:AbstractFloat\nReflectance for longwave radiation at each canopy layer\n_ρ_sd::Matrix{FT} where FT<:AbstractFloat\nReflectance for solar directional->diffuse at each canopy layer\n_τ_dd::Matrix{FT} where FT<:AbstractFloat\nTranmittance for diffuse->diffuse at each canopy layer\n_τ_lw::Vector{FT} where FT<:AbstractFloat\nTranmittance for longwave radiation at each canopy layer\n_τ_sd::Matrix{FT} where FT<:AbstractFloat\nTranmittance for solar directional->diffuse at each canopy layer\n_τ_ss::AbstractFloat\nTranmittance for solar directional->directional at each canopy layer\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractCanopyRadiationProfile","page":"API","title":"ClimaCache.AbstractCanopyRadiationProfile","text":"abstract type AbstractCanopyRadiationProfile{FT<:AbstractFloat}\n\nHierarchy of AbstractCanopy:\n\nBroadbandSLCanopyRadiationProfile\nHyperspectralMLCanopyRadiationProfile\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BroadbandSLCanopyRadiationProfile","page":"API","title":"ClimaCache.BroadbandSLCanopyRadiationProfile","text":"mutable struct BroadbandSLCanopyRadiationProfile{FT<:AbstractFloat} <: ClimaCache.AbstractCanopyRadiationProfile{FT<:AbstractFloat}\n\nStructure to store canopy radiation profiles\n\nFields\n\nDIM_INCL::Int64\nDimension of inclination angles\napar_shaded::AbstractFloat\nMean shaded leaf APAR (per leaf area) in μmol m⁻² s⁻¹\napar_sunlit::AbstractFloat\nMean sunlit leaf APAR (per leaf area) in μmol m⁻² s⁻¹\nk_diffuse::AbstractFloat\nWeighted extinction coefficient for diffuse radiation (ratio between projected area to true leaf area)\nk_direct::AbstractFloat\nWeighted extinction coefficient for direct radiation (ratio between projected area to true leaf area)\nlai_shaded::AbstractFloat\nTotal shaded leaf area index\nlai_sunlit::AbstractFloat\nTotal sunlit leaf area index\npar_shaded::AbstractFloat\nMean shaded leaf PAR (per leaf area) in μmol m⁻² s⁻¹\npar_sunlit::AbstractFloat\nMean sunlit leaf PAR (per leaf area) in μmol m⁻² s⁻¹\nr_net_shaded::AbstractFloat\nNet absorbed radiation for shaded leaves [W m⁻²]\nr_net_sunlit::AbstractFloat\nNet absorbed radiation for sunlit leaves [W m⁻²]\n_k_diffuse::Vector{FT} where FT<:AbstractFloat\nExtinction coefficient for diffuse radiation at different leaf inclination angles\n_k_direct::Vector{FT} where FT<:AbstractFloat\nExtinction coefficient for direct radiation at different leaf inclination angles\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.HyperspectralMLCanopyRadiationProfile","page":"API","title":"ClimaCache.HyperspectralMLCanopyRadiationProfile","text":"mutable struct HyperspectralMLCanopyRadiationProfile{FT<:AbstractFloat} <: ClimaCache.AbstractCanopyRadiationProfile{FT<:AbstractFloat}\n\nStructure to store canopy radiation profiles\n\nFields\n\nDIM_AZI::Int64\nDimension of azimuth angles\nDIM_INCL::Int64\nDimension of inclination angles\nDIM_LAYER::Int64\nDimension of canopy layers\nDIM_PAR::Int64\nDimension of PAR wave length bins\nDIM_SIF::Int64\nDimension of SIF wave length bins\nDIM_WL::Int64\nDimension of short wave length bins\nalbedo::Vector{FT} where FT<:AbstractFloat\nAlbedo towards the viewing direction\napar_shaded::Vector{FT} where FT<:AbstractFloat\nMean APAR for shaded leaves [μmol m⁻² s⁻¹]\napar_sunlit::Array{FT, 3} where FT<:AbstractFloat\nAPAR for sunlit leaves [μmol m⁻² s⁻¹]\ne_diffuse_down::Matrix{FT} where FT<:AbstractFloat\nDownwelling diffuse short-wave radiation at each canopy layer boundary [mW m⁻² nm⁻¹]\ne_diffuse_up::Matrix{FT} where FT<:AbstractFloat\nUpwelling diffuse short-wave radiation at each canopy layer boundary [mW m⁻² nm⁻¹]\ne_direct::Matrix{FT} where FT<:AbstractFloat\nSolar directly radiation at each canopy layer boundary [mW m⁻² nm⁻¹]\ne_net_diffuse::Matrix{FT} where FT<:AbstractFloat\nNet diffuse radiation at each canopy layer for APAR [mW m⁻² nm⁻¹]\ne_net_direct::Matrix{FT} where FT<:AbstractFloat\nNet direct radiation at each canopy layer for APAR [mW m⁻² nm⁻¹]\ne_o::Vector{FT} where FT<:AbstractFloat\nTotal radiation towards the viewing direction [mW m⁻² nm⁻¹]\ne_sum_diffuse::Matrix{FT} where FT<:AbstractFloat\nSum diffuse radiation at each canopy layer for PAR [mW m⁻² nm⁻¹]\ne_sum_direct::Matrix{FT} where FT<:AbstractFloat\nSum direct radiation at each canopy layer for PAR [mW m⁻² nm⁻¹]\ne_v::Matrix{FT} where FT<:AbstractFloat\nRadiation towards the viewing direction per layer (including soil) [mW m⁻² nm⁻¹]\npar_in::AbstractFloat\nTotal incoming radiation PAR [μmol m⁻² s⁻¹]\npar_in_diffuse::AbstractFloat\nDiffuse incoming radiation PAR [μmol m⁻² s⁻¹]\npar_in_direct::AbstractFloat\nDirect incoming radiation PAR [μmol m⁻² s⁻¹]\npar_shaded::Vector{FT} where FT<:AbstractFloat\nMean PAR for shaded leaves (before absorption) [μmol m⁻² s⁻¹]\npar_sunlit::Array{FT, 3} where FT<:AbstractFloat\nPAR for sunlit leaves (before absorption) [μmol m⁻² s⁻¹]\nr_lw::Vector{FT} where FT<:AbstractFloat\nLongwave energy flux from leaves per leaf area (one side) [W m⁻²]\nr_lw_down::Vector{FT} where FT<:AbstractFloat\nDownwelling longwave energy flux [W m⁻²]\nr_lw_up::Vector{FT} where FT<:AbstractFloat\nUpwelling longwave energy flux [W m⁻²]\nr_net_lw::Vector{FT} where FT<:AbstractFloat\nNet longwave energy absorption for all leaves [W m⁻²]\nr_net_sw::Vector{FT} where FT<:AbstractFloat\nNet shortwave energy absorption for all leaves [W m⁻²]\nr_net_sw_shaded::Vector{FT} where FT<:AbstractFloat\nNet shortwave energy absorption for shaded leaves [W m⁻²]\nr_net_sw_sunlit::Vector{FT} where FT<:AbstractFloat\nNet shortwave energy absorption for sunlit leaves [W m⁻²]\ns_layer_down::Matrix{FT} where FT<:AbstractFloat\nDownwelling SIF for sunlit leaves at each wavelength for a layer\ns_layer_up::Matrix{FT} where FT<:AbstractFloat\nUpwelling SIF for sunlit leaves at each wavelength for a layer\nsif_down::Matrix{FT} where FT<:AbstractFloat\nDownwelling SIF\nsif_obs::Vector{FT} where FT<:AbstractFloat\nSIF at observer direction\nsif_obs_shaded::Vector{FT} where FT<:AbstractFloat\nSIF at observer direction from shaded APAR\nsif_obs_scatter::Vector{FT} where FT<:AbstractFloat\nSIF at observer direction from scattering\nsif_obs_ssoil::Vector{FT} where FT<:AbstractFloat\nSIF at observer direction from soil reflection\nsif_obs_sunlit::Vector{FT} where FT<:AbstractFloat\nSIF at observer direction from sunlit APAR\nsif_up::Matrix{FT} where FT<:AbstractFloat\nUpwelling SIF\n_apar_shaded::Vector{FT} where FT<:AbstractFloat\nMean APAR for shaded leaves per wavelength [μmol m⁻² s⁻¹ nm⁻¹]\n_apar_sunlit::Vector{FT} where FT<:AbstractFloat\nAPAR for sunlit leaves per wavelength [μmol m⁻² s⁻¹ nm⁻¹]\n_par_shaded::Vector{FT} where FT<:AbstractFloat\nMean PAR for shaded leaves per wavelength (before absorption) [μmol m⁻² s⁻¹ nm⁻¹]\n_par_sunlit::Vector{FT} where FT<:AbstractFloat\nPAR for sunlit leaves per wavelength (before absorption) [μmol m⁻² s⁻¹ nm⁻¹]\n_ppar_shaded::Vector{FT} where FT<:AbstractFloat\nMean APAR for shaded leaves for photosynthesis per wavelength [μmol m⁻² s⁻¹ nm⁻¹]\n_ppar_sunlit::Vector{FT} where FT<:AbstractFloat\nAPAR for sunlit leaves for photosynthesis per wavelength [μmol m⁻² s⁻¹ nm⁻¹]\n_r_emit_down::Vector{FT} where FT<:AbstractFloat\nDownwelling longwave energy flux cache [W m⁻²]\n_r_emit_up::Vector{FT} where FT<:AbstractFloat\nUpwelling longwave energy flux cache [W m⁻²]\n_s_emit_down::Matrix{FT} where FT<:AbstractFloat\nDownwelling SIF for sunlit leaves at each wavelength\n_s_emit_up::Matrix{FT} where FT<:AbstractFloat\nUpwelling SIF for sunlit leaves at each wavelength\n_s_shaded_down::Vector{FT} where FT<:AbstractFloat\nDownwelling SIF for shaded leaves at each wavelength\n_s_shaded_up::Vector{FT} where FT<:AbstractFloat\nUpwelling SIF for shaded leaves at each wavelength\n_s_sunlit_down::Vector{FT} where FT<:AbstractFloat\nDownwelling SIF for sunlit leaves at each wavelength\n_s_sunlit_up::Vector{FT} where FT<:AbstractFloat\nUpwelling SIF for sunlit leaves at each wavelength\n_sif_obs_shaded::Matrix{FT} where FT<:AbstractFloat\nCache to compute SIF at observer direction from shaded APAR\n_sif_obs_scatter::Matrix{FT} where FT<:AbstractFloat\nCache to compute SIF at observer direction from scattering\n_sif_obs_sunlit::Matrix{FT} where FT<:AbstractFloat\nCache to compute SIF at observer direction from sunlit APAR\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractLIDFAlgorithm","page":"API","title":"ClimaCache.AbstractLIDFAlgorithm","text":"abstract type AbstractLIDFAlgorithm{FT<:AbstractFloat}\n\nHierarchy of AbstractLIDFAlgorithm:\n\nVerhoefLIDF\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.VerhoefLIDF","page":"API","title":"ClimaCache.VerhoefLIDF","text":"mutable struct VerhoefLIDF{FT<:AbstractFloat} <: ClimaCache.AbstractLIDFAlgorithm{FT<:AbstractFloat}\n\nStructure for Verhoef LIDF algorithm\n\nFields\n\nA::AbstractFloat\nLeaf inclination angle distribution function parameter a\nB::AbstractFloat\nLeaf inclination angle distribution function parameter b\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractCanopy","page":"API","title":"ClimaCache.AbstractCanopy","text":"abstract type AbstractCanopy{FT<:AbstractFloat}\n\nHierarchy of AbstractCanopy:\n\nBroadbandSLCanopy\nHyperspectralMLCanopy\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.BroadbandSLCanopy","page":"API","title":"ClimaCache.BroadbandSLCanopy","text":"mutable struct BroadbandSLCanopy{FT<:AbstractFloat} <: ClimaCache.AbstractCanopy{FT<:AbstractFloat}\n\nStructure to save single layer broadband canopy parameters\n\nFields\n\nDIM_INCL::Int64\nDimension of inclination angles\nLIDF::ClimaCache.VerhoefLIDF\nLeaf inclination angle distribution function algorithm\nRADIATION::ClimaCache.BroadbandSLCanopyRadiationProfile\nCanopy radiation profiles\nP_INCL::Vector{FT} where FT<:AbstractFloat\nInclination angle distribution\nΘ_INCL_BNDS::Matrix{FT} where FT<:AbstractFloat\nBounds of inclination angles [°]\nΘ_INCL::Vector{FT} where FT<:AbstractFloat\nMean inclination angles [°]\nci::AbstractFloat\nClumping index\nlai::AbstractFloat\nLeaf area index\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.HyperspectralMLCanopy","page":"API","title":"ClimaCache.HyperspectralMLCanopy","text":"mutable struct HyperspectralMLCanopy{FT<:AbstractFloat} <: ClimaCache.AbstractCanopy{FT<:AbstractFloat}\n\nStructure to save multiple layer hyperspectral canopy parameters\n\nFields\n\nDIM_AZI::Int64\nDimension of azimuth angles\nDIM_INCL::Int64\nDimension of inclination angles\nDIM_LAYER::Int64\nDimension of canopy layers\nHOT_SPOT::AbstractFloat\nHot spot parameter\nLIDF::ClimaCache.VerhoefLIDF\nLeaf inclination angle distribution function algorithm\nOPTICS::ClimaCache.HyperspectralMLCanopyOpticalProperty\nCanopy optical properties\nRADIATION::ClimaCache.HyperspectralMLCanopyRadiationProfile\nCanopy radiation profiles\nWLSET::ClimaCache.WaveLengthSet\nWave length set used to paramertize other variables\nP_INCL::Vector{FT} where FT<:AbstractFloat\nInclination angle distribution\nΘ_AZI::Vector{FT} where FT<:AbstractFloat\nMean azimuth angles [°]\nΘ_INCL_BNDS::Matrix{FT} where FT<:AbstractFloat\nBounds of inclination angles [°]\nΘ_INCL::Vector{FT} where FT<:AbstractFloat\nMean inclination angles [°]\nΩ_A::AbstractFloat\nClumping structure a\nΩ_B::AbstractFloat\nClumping structure b\nci::AbstractFloat\nClumping index\nlai::AbstractFloat\nLeaf area index\n_1_AZI::Vector{FT} where FT<:AbstractFloat\nOnes with the length of Θ_AZI\n_COS_Θ_AZI::Vector{FT} where FT<:AbstractFloat\nCosine of Θ_AZI\n_COS²_Θ_INCL::Vector{FT} where FT<:AbstractFloat\nSquare of cosine of Θ_INCL\n_COS²_Θ_INCL_AZI::Matrix{FT} where FT<:AbstractFloat\nSquare of cosine of Θ_INCL at different azimuth angles\n_x_bnds::Vector{FT} where FT<:AbstractFloat\nCache for level boundary locations\n\n\n\n\n\n","category":"type"},{"location":"API/#SPAC","page":"API","title":"SPAC","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"Root\nStem\nAbstractSPACSystem\nMonoElementSPAC\nMonoMLGrassSPAC\nMonoMLPalmSPAC\nMonoMLTreeSPAC","category":"page"},{"location":"API/#ClimaCache.Root","page":"API","title":"ClimaCache.Root","text":"mutable struct Root{FT<:AbstractFloat}\n\nStructure to save root parameters\n\nFields\n\nHS::ClimaCache.RootHydraulics\nRootHydraulics type root hydraulic system\nt::AbstractFloat\nCurrent temperature [K]\ne::AbstractFloat\nTotal stored energy in water [J]\n∂e∂t::AbstractFloat\nMarginal increase in energy [W]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.Stem","page":"API","title":"ClimaCache.Stem","text":"mutable struct Stem{FT<:AbstractFloat}\n\nStructure to save stem parameters\n\nFields\n\nHS::ClimaCache.StemHydraulics\nStemHydraulics type stem hydraulic system\nt::AbstractFloat\nCurrent temperature\ne::AbstractFloat\nTotal stored energy in water [J]\n∂e∂t::AbstractFloat\nMarginal increase in energy [W]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AbstractSPACSystem","page":"API","title":"ClimaCache.AbstractSPACSystem","text":"abstract type AbstractSPACSystem{FT<:AbstractFloat}\n\nHierarchy of AbstractSPACSystem:\n\nMonoElementSPAC\nMonoMLGrassSPAC\nMonoMLPalmSPAC\nMonoMLTreeSPAC\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.MonoElementSPAC","page":"API","title":"ClimaCache.MonoElementSPAC","text":"mutable struct MonoElementSPAC{FT<:AbstractFloat} <: ClimaCache.AbstractSPACSystem{FT<:AbstractFloat}\n\nStruct for simplest SPAC system\n\nFields\n\nAIR::ClimaCache.AirLayer\nAir conditions\nLEAF::ClimaCache.Leaf\nLeaf system\nMETEO::ClimaCache.Meteorology\nMeteorology information\nROOT::ClimaCache.Root\nRoot system\nSOIL::ClimaCache.Soil\nSoil component\nSTEM::ClimaCache.Stem\nStem system\n_krs::Vector{FT} where FT<:AbstractFloat\nRelative hydraulic conductance\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.MonoMLGrassSPAC","page":"API","title":"ClimaCache.MonoMLGrassSPAC","text":"mutable struct MonoMLGrassSPAC{FT<:AbstractFloat} <: ClimaCache.AbstractSPACSystem{FT<:AbstractFloat}\n\nStruct for monospecies grass SPAC system\n\nFields\n\nDIM_AIR::Int64\nDimension of air layers\nDIM_LAYER::Int64\nDimension of canopy layers\nDIM_ROOT::Int64\nDimension of root layers\nΦ_PHOTON::Bool\nWhether to convert energy to photons when computing fluorescence\nLEAVES_INDEX::Vector{Int64}\nCorresponding air layer per canopy layer\nROOTS_INDEX::Vector{Int64}\nCorresponding soil layer per root layer\nZ::Vector{FT} where FT<:AbstractFloat\nDepth and height information [m]\nZ_AIR::Vector{FT} where FT<:AbstractFloat\nAir boundaries [m]\nAIR::Array{ClimaCache.AirLayer{FT}, 1} where FT<:AbstractFloat\nAir for each layer (may be more than canopy layer)\nANGLES::ClimaCache.SunSensorGeometry\nSun sensor geometry\nCANOPY::ClimaCache.HyperspectralMLCanopy\nCanopy used for radiation calculations\nLEAVES::Array{ClimaCache.Leaves2D{FT}, 1} where FT<:AbstractFloat\nLeaf per layer\nLHA::ClimaCache.HyperspectralAbsorption\nHyperspectral absorption features of different leaf components\nMETEO::ClimaCache.Meteorology\nMeteorology information\nRAD_LW::AbstractFloat\nDownwelling longwave radiation [W m⁻²]\nRAD_SW::ClimaCache.HyperspectralRadiation\nDownwelling shortwave radiation\nROOTS::Array{ClimaCache.Root{FT}, 1} where FT<:AbstractFloat\nRoot hydraulic system\nSOIL::ClimaCache.Soil\nSoil component\nWLSET::ClimaCache.WaveLengthSet\nWavelength sets to use with hyperspectral radiation\n_fs::Vector{FT} where FT<:AbstractFloat\nFlow rate per root layer\n_ks::Vector{FT} where FT<:AbstractFloat\nConductances for each root layer at given flow\n_ps::Vector{FT} where FT<:AbstractFloat\nPressure for each root layer at given flow\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.MonoMLPalmSPAC","page":"API","title":"ClimaCache.MonoMLPalmSPAC","text":"mutable struct MonoMLPalmSPAC{FT<:AbstractFloat} <: ClimaCache.AbstractSPACSystem{FT<:AbstractFloat}\n\nStruct for monospecies palm SPAC system (with trunk)\n\nFields\n\nDIM_AIR::Int64\nDimension of air layers\nDIM_LAYER::Int64\nDimension of canopy layers\nDIM_ROOT::Int64\nDimension of root layers\nΦ_PHOTON::Bool\nWhether to convert energy to photons when computing fluorescence\nLEAVES_INDEX::Vector{Int64}\nCorresponding air layer per canopy layer\nROOTS_INDEX::Vector{Int64}\nCorresponding soil layer per root layer\nZ::Vector{FT} where FT<:AbstractFloat\nDepth and height information [m]\nZ_AIR::Vector{FT} where FT<:AbstractFloat\nAir boundaries [m]\nAIR::Array{ClimaCache.AirLayer{FT}, 1} where FT<:AbstractFloat\nAir for each layer (more than canopy layer)\nANGLES::ClimaCache.SunSensorGeometry\nSun sensor geometry\nCANOPY::ClimaCache.HyperspectralMLCanopy\nCanopy used for radiation calculations\nLEAVES::Array{ClimaCache.Leaves2D{FT}, 1} where FT<:AbstractFloat\nLeaf per layer\nLHA::ClimaCache.HyperspectralAbsorption\nHyperspectral absorption features of different leaf components\nMETEO::ClimaCache.Meteorology\nMeteorology information\nRAD_LW::AbstractFloat\nDownwelling longwave radiation [W m⁻²]\nRAD_SW::ClimaCache.HyperspectralRadiation\nDownwelling shortwave radiation\nROOTS::Array{ClimaCache.Root{FT}, 1} where FT<:AbstractFloat\nRoot hydraulic system\nSOIL::ClimaCache.Soil\nSoil component\nTRUNK::ClimaCache.Stem\nTrunk hydraulic system\nWLSET::ClimaCache.WaveLengthSet\nWavelength sets to use with hyperspectral radiation\n_fs::Vector{FT} where FT<:AbstractFloat\nFlow rate per root layer\n_ks::Vector{FT} where FT<:AbstractFloat\nConductances for each root layer at given flow\n_ps::Vector{FT} where FT<:AbstractFloat\nPressure for each root layer at given flow\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.MonoMLTreeSPAC","page":"API","title":"ClimaCache.MonoMLTreeSPAC","text":"mutable struct MonoMLTreeSPAC{FT<:AbstractFloat} <: ClimaCache.AbstractSPACSystem{FT<:AbstractFloat}\n\nStruct for monospecies tree SPAC system (with trunk and branches)\n\nFields\n\nDIM_AIR::Int64\nDimension of air layers\nDIM_LAYER::Int64\nDimension of canopy layers\nDIM_ROOT::Int64\nDimension of root layers\nΦ_PHOTON::Bool\nWhether to convert energy to photons when computing fluorescence\nLEAVES_INDEX::Vector{Int64}\nCorresponding air layer per canopy layer\nROOTS_INDEX::Vector{Int64}\nCorresponding soil layer per root layer\nZ::Vector{FT} where FT<:AbstractFloat\nDepth and height information [m]\nZ_AIR::Vector{FT} where FT<:AbstractFloat\nAir boundaries [m]\nAIR::Array{ClimaCache.AirLayer{FT}, 1} where FT<:AbstractFloat\nAir for each layer (more than canopy layer)\nANGLES::ClimaCache.SunSensorGeometry\nSun sensor geometry\nBRANCHES::Array{ClimaCache.Stem{FT}, 1} where FT<:AbstractFloat\nBranch hydraulic system\nCANOPY::ClimaCache.HyperspectralMLCanopy\nCanopy used for radiation calculations\nLEAVES::Array{ClimaCache.Leaves2D{FT}, 1} where FT<:AbstractFloat\nLeaf per layer\nLHA::ClimaCache.HyperspectralAbsorption\nHyperspectral absorption features of different leaf components\nMETEO::ClimaCache.Meteorology\nMeteorology information\nRAD_LW::AbstractFloat\nDownwelling longwave radiation [W m⁻²]\nRAD_SW::ClimaCache.HyperspectralRadiation\nDownwelling shortwave radiation\nROOTS::Array{ClimaCache.Root{FT}, 1} where FT<:AbstractFloat\nRoot hydraulic system\nSOIL::ClimaCache.Soil\nSoil component\nTRUNK::ClimaCache.Stem\nTrunk hydraulic system\nWLSET::ClimaCache.WaveLengthSet\nWavelength sets to use with hyperspectral radiation\n_fs::Vector{FT} where FT<:AbstractFloat\nFlow rate per root layer\n_ks::Vector{FT} where FT<:AbstractFloat\nConductances for each root layer at given flow\n_ps::Vector{FT} where FT<:AbstractFloat\nPressure for each root layer at given flow\n\n\n\n\n\n","category":"type"},{"location":"API/#Utils","page":"API","title":"Utils","text":"","category":"section"},{"location":"API/#Colimitation-Methods","page":"API","title":"Colimitation Methods","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"AbstractColimit\nMinimumColimit\nQuadraticColimit\nSerialColimit","category":"page"},{"location":"API/#ClimaCache.AbstractColimit","page":"API","title":"ClimaCache.AbstractColimit","text":"abstract type AbstractColimit{FT<:AbstractFloat}\n\nHierarchy of AbstractColimit\n\nMinimumColimit\nQuadraticColimit\nSerialColimit\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.MinimumColimit","page":"API","title":"ClimaCache.MinimumColimit","text":"Empty structure to indicate minimum colimitation: x = min(x₁, x₂) \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.QuadraticColimit","page":"API","title":"ClimaCache.QuadraticColimit","text":"Structure to indicate quadratic colimitation (contains field CURVATURE): θ⋅x² - (x₁ + x₂)⋅x + x₁x₂ = 0 \n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.SerialColimit","page":"API","title":"ClimaCache.SerialColimit","text":"Empty structure to indicate serial colimitation: x = 1 / (1/x₁ + 1/x₂) \n\n\n\n\n\n","category":"type"},{"location":"API/#Universal-Constants","page":"API","title":"Universal Constants","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"UniversalConstants\nAVOGADRO\nCP_D\nCP_D_MOL\nCP_I\nCP_I_MOL\nCP_L\nCP_L_MOL\nCP_V\nCP_V_MOL\nF_O₂\nGAS_R\nGRAVITY\nH_PLANCK\nK_BOLTZMANN\nK_STEFAN\nK_VON_KARMAN\nLH_V₀\nLIGHT_SPEED\nM_DRYAIR\nM_H₂O\nP_ATM\nPRESS_TRIPLE\nR_V\nRT₂₅\nT₀\nT₂₅\nT_TRIPLE\nV_H₂O\nYEAR_D\nΛ_THERMAL_H₂O\nρ_H₂O\nρg_MPa","category":"page"},{"location":"API/#ClimaCache.UniversalConstants","page":"API","title":"ClimaCache.UniversalConstants","text":"mutable struct UniversalConstants\n\nStructure to save universal constants.\n\nFields\n\nAVOGADRO::Float64\nAvogadro's number [molecule mol⁻¹]\nCP_D::Float64\nIsobaric specific heat of dry air [J kg⁻¹ K⁻¹]\nCP_I::Float64\nIsobaric specific heat of ice water [J kg⁻¹ K⁻¹]\nCP_L::Float64\nIsobaric specific heat of liquid water [J kg⁻¹ K⁻¹]\nCP_V::Float64\nIsobaric specific heat of water vapor [J kg⁻¹ K⁻¹]\nF_O₂::Float64\nO₂ fraction in air [-]\nGAS_R::Float64\nUniversal gas constant [J mol⁻¹ K⁻¹]\nGRAVITY::Float64\nGravity of the Earth [m s⁻²]\nH_PLANCK::Float64\nPlanck constant [m² kg s⁻¹]\nK_BOLTZMANN::Float64\nBoltzmann constant [m² kg s⁻² K⁻¹]\nK_STEFAN::Float64\nStefan-Boltzmann constant [W m⁻² K⁻⁴]\nK_VON_KARMAN::Float64\nVon Karman constant [-]\nLH_V₀::Float64\nLatent heat vaporization at T₀ [K kg⁻¹]\nLIGHT_SPEED::Float64\nLight speed in vacuum [m s⁻¹]\nM_DRYAIR::Float64\nMolar mass of dry air [kg mol⁻¹]\nM_H₂O::Float64\nMolar mass of water [kg mol⁻¹]\nP_ATM::Float64\nMean atmospheric pressure at sea level [Pa]\nPRESS_TRIPLE::Float64\nWater vapor pressure at triple temperature [Pa]\nT₀::Float64\nFreezing temperature of water [K]\nT_TRIPLE::Float64\nTriple temperature of water [K]\nYEAR_D::Float64\nMean number of days per year [day]\nΛ_THERMAL_H₂O::Float64\nThermal conductivity of water [W m⁻¹ K⁻¹]\nρ_H₂O::Float64\nDensity of liquid water [kg m⁻³]\n\n\n\n\n\n","category":"type"},{"location":"API/#ClimaCache.AVOGADRO","page":"API","title":"ClimaCache.AVOGADRO","text":"Avogadro's number [molecule mol⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.CP_D","page":"API","title":"ClimaCache.CP_D","text":"Isobaric specific heat of dry air [J kg⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.CP_D_MOL","page":"API","title":"ClimaCache.CP_D_MOL","text":"Isobaric specific heat of dry air per mole [J mol⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.CP_I","page":"API","title":"ClimaCache.CP_I","text":"Isobaric specific heat of ice water [J kg⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.CP_I_MOL","page":"API","title":"ClimaCache.CP_I_MOL","text":"Isobaric specific heat of ice water per mole [J mol⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.CP_L","page":"API","title":"ClimaCache.CP_L","text":"Isobaric specific heat of liquid water [J kg⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.CP_L_MOL","page":"API","title":"ClimaCache.CP_L_MOL","text":"Isobaric specific heat of liquid water per mole [J mol⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.CP_V","page":"API","title":"ClimaCache.CP_V","text":"Isobaric specific heat of water vapor [J kg⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.CP_V_MOL","page":"API","title":"ClimaCache.CP_V_MOL","text":"Isobaric specific heat of water vapor per mole [J mol⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.F_O₂","page":"API","title":"ClimaCache.F_O₂","text":"O₂ fraction in air [-] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.GAS_R","page":"API","title":"ClimaCache.GAS_R","text":"Universal gas constant [J mol⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.GRAVITY","page":"API","title":"ClimaCache.GRAVITY","text":"Gravity of the Earth [m s⁻²] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.H_PLANCK","page":"API","title":"ClimaCache.H_PLANCK","text":"Planck constant [m² kg s⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.K_BOLTZMANN","page":"API","title":"ClimaCache.K_BOLTZMANN","text":"Boltzmann constant [m² kg s⁻² K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.K_STEFAN","page":"API","title":"ClimaCache.K_STEFAN","text":"Stefan-Boltzmann constant [W m⁻² K⁻⁴] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.K_VON_KARMAN","page":"API","title":"ClimaCache.K_VON_KARMAN","text":"Von Karman constant [-] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.LH_V₀","page":"API","title":"ClimaCache.LH_V₀","text":"Latent heat vaporization at T₀ [K kg⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.LIGHT_SPEED","page":"API","title":"ClimaCache.LIGHT_SPEED","text":"Light speed in vacuum [m s⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.M_DRYAIR","page":"API","title":"ClimaCache.M_DRYAIR","text":"Molar mass of dry air [kg mol⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.M_H₂O","page":"API","title":"ClimaCache.M_H₂O","text":"Molar mass of water [kg mol⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.P_ATM","page":"API","title":"ClimaCache.P_ATM","text":"Mean atmospheric pressure at sea level [Pa] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.PRESS_TRIPLE","page":"API","title":"ClimaCache.PRESS_TRIPLE","text":"Water vapor pressure at triple temperature [Pa] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.R_V","page":"API","title":"ClimaCache.R_V","text":"Gas constant water vapor [J kg⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.RT₂₅","page":"API","title":"ClimaCache.RT₂₅","text":"Gas constant times 298.15 K [J mol⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.T₀","page":"API","title":"ClimaCache.T₀","text":"Freezing temperature of water [K] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.T₂₅","page":"API","title":"ClimaCache.T₂₅","text":"Kelvin temperature at 25 Celcius [K] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.T_TRIPLE","page":"API","title":"ClimaCache.T_TRIPLE","text":"Triple temperature of water [K] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.V_H₂O","page":"API","title":"ClimaCache.V_H₂O","text":"Molar volume of liqiud water \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.YEAR_D","page":"API","title":"ClimaCache.YEAR_D","text":"Mean number of days per year [day] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.Λ_THERMAL_H₂O","page":"API","title":"ClimaCache.Λ_THERMAL_H₂O","text":"Thermal conductivity of water [W m⁻¹ K⁻¹] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.ρ_H₂O","page":"API","title":"ClimaCache.ρ_H₂O","text":"Density of liquid water [kg m⁻³] \n\n\n\n\n\n","category":"function"},{"location":"API/#ClimaCache.ρg_MPa","page":"API","title":"ClimaCache.ρg_MPa","text":"Density of water times gravity [MPa m⁻¹] \n\n\n\n\n\n","category":"function"}]
}
